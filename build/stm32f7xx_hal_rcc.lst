ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_hal_rcc.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_RCC_DeInit
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_RCC_DeInit:
  26              	.LFB141:
  27              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @file    stm32f7xx_hal_rcc.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     [..]
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     [..]
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 2


  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ==============================================================================
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     [..]
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       from/to registers.
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     [..]
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       Implemented Workaround:
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   @endverbatim
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ******************************************************************************
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @attention
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ******************************************************************************
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #include "stm32f7xx_hal.h"
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /** @addtogroup STM32F7xx_HAL_Driver
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @{
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /** @defgroup RCC RCC
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief RCC HAL module driver
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @{
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @{
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 3


  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #define MCO2_CLK_ENABLE()   __HAL_RCC_GPIOC_CLK_ENABLE()
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @}
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @{
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @}
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @{
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   @verbatim
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ===============================================================================
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** ##### Initialization and de-initialization functions #####
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ===============================================================================
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     [..]
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       and APB2).
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           the PLL as System clock source.
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           clock source.
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 216 MHz)
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****              the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the function HAL_RCC_EnableCSS()
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 4


 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           clock source), the System clock is automatically switched to HSI and an interrupt
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M7 NMI
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           clock (through a configurable prescaler) on PA8 pin.
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           clock (through a configurable prescaler) on PC9 pin.
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           HSE and PLL.
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           the peripherals mapped on these busses. You can use
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (+@) I2S: the I2S clock can be derived either from a specific PLL (PLLI2S) or
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****               from an external clock mapped on the I2S_CKIN pin.
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****               You have to use __HAL_RCC_PLLI2S_CONFIG() macro to configure this clock.
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (+@)  SAI: the SAI clock can be derived either from a specific PLL (PLLI2S) or (PLLSAI) o
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****               from an external clock mapped on the I2S_CKIN pin.
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                You have to use __HAL_RCC_PLLI2S_CONFIG() macro to configure this clock.
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (+@) RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****               divided by 2 to 31. You have to use __HAL_RCC_RTC_CONFIG() and __HAL_RCC_RTC_ENABLE()
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****               macros to configure this clock.
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (+@) USB OTG FS, SDIO and RTC: USB OTG FS require a frequency equal to 48 MHz
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****               to work correctly, while the SDIO require a frequency equal or lower than
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****               to 48. This clock is derived of the main PLL through PLLQ divider.
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (+@) IWDG clock which is always the LSI clock.
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** @endverbatim
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @{
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            - HSE, PLL, PLLI2S and PLLSAI OFF
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            - All interrupts disabled
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            - Peripheral clocks
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
  28              		.loc 1 199 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 5


  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   uint32_t tickstart;
  39              		.loc 1 200 3 view .LVU1
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get Start Tick */
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  40              		.loc 1 203 3 view .LVU2
  41              		.loc 1 203 15 is_stmt 0 view .LVU3
  42 0002 FFF7FEFF 		bl	HAL_GetTick
  43              	.LVL0:
  44 0006 0446     		mov	r4, r0
  45              	.LVL1:
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Set HSION bit to the reset value */
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
  46              		.loc 1 206 3 is_stmt 1 view .LVU4
  47 0008 4F4A     		ldr	r2, .L28
  48 000a 1368     		ldr	r3, [r2]
  49 000c 43F00103 		orr	r3, r3, #1
  50 0010 1360     		str	r3, [r2]
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Wait till HSI is ready */
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
  51              		.loc 1 209 3 view .LVU5
  52              	.LVL2:
  53              	.L2:
  54              		.loc 1 209 10 is_stmt 0 view .LVU6
  55 0012 4D4B     		ldr	r3, .L28
  56 0014 1B68     		ldr	r3, [r3]
  57              		.loc 1 209 9 view .LVU7
  58 0016 13F0020F 		tst	r3, #2
  59 001a 07D1     		bne	.L22
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  60              		.loc 1 211 5 is_stmt 1 view .LVU8
  61              		.loc 1 211 10 is_stmt 0 view .LVU9
  62 001c FFF7FEFF 		bl	HAL_GetTick
  63              	.LVL3:
  64              		.loc 1 211 24 view .LVU10
  65 0020 001B     		subs	r0, r0, r4
  66              		.loc 1 211 8 view .LVU11
  67 0022 0228     		cmp	r0, #2
  68 0024 F5D9     		bls	.L2
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       return HAL_TIMEOUT;
  69              		.loc 1 213 14 view .LVU12
  70 0026 0323     		movs	r3, #3
  71              	.L3:
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 6


 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Set HSITRIM[4:0] bits to the reset value */
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSITRIM_4);
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get Start Tick */
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Reset CFGR register */
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Wait till clock switch is ready */
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RESET)
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get Start Tick */
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Clear HSEON, HSEBYP and CSSON bits */
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSEBYP | RCC_CR_CSSON);
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Wait till HSE is disabled */
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != RESET)
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get Start Tick */
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Clear PLLON bit */
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Wait till PLL is disabled */
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != RESET)
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get Start Tick */
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Reset PLLI2SON bit */
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLI2SON);
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Wait till PLLI2S is disabled */
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLI2SRDY) != RESET)
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 7


 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get Start Tick */
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Reset PLLSAI bit */
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLSAION);
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Wait till PLLSAI is disabled */
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLSAIRDY) != RESET)
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Once PLL, PLLI2S and PLLSAI are OFF, reset PLLCFGR register to default value */
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC->PLLCFGR = RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLN_6 | RCC_PLLCFGR_PLLN_7 | RCC_PLLCFGR_PLLQ_2 
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Reset PLLI2SCFGR register to default value */
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC->PLLI2SCFGR = RCC_PLLI2SCFGR_PLLI2SN_6 | RCC_PLLI2SCFGR_PLLI2SN_7 | RCC_PLLI2SCFGR_PLLI2SQ_2 
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Reset PLLSAICFGR register to default value */
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC->PLLSAICFGR = RCC_PLLSAICFGR_PLLSAIN_6 | RCC_PLLSAICFGR_PLLSAIN_7 | RCC_PLLSAICFGR_PLLSAIQ_2 
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Disable all interrupts */
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CIR, RCC_CIR_LSIRDYIE | RCC_CIR_LSERDYIE | RCC_CIR_HSIRDYIE | RCC_CIR_HSERDYIE | R
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Clear all interrupt flags */
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   SET_BIT(RCC->CIR, RCC_CIR_LSIRDYC | RCC_CIR_LSERDYC | RCC_CIR_HSIRDYC | RCC_CIR_HSERDYC | RCC_CIR
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Clear LSION bit */
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSION);
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Reset all CSR flags */
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   SET_BIT(RCC->CSR, RCC_CSR_RMVF);
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Adapt Systick interrupt period */
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if (HAL_InitTick(uwTickPrio) != HAL_OK)
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     return HAL_ERROR;
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     return HAL_OK;
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
  72              		.loc 1 328 1 view .LVU13
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 8


  73 0028 1846     		mov	r0, r3
  74 002a 38BD     		pop	{r3, r4, r5, pc}
  75              	.LVL4:
  76              	.L22:
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  77              		.loc 1 218 3 is_stmt 1 view .LVU14
  78 002c 464D     		ldr	r5, .L28
  79 002e 2B68     		ldr	r3, [r5]
  80 0030 43F08003 		orr	r3, r3, #128
  81 0034 2B60     		str	r3, [r5]
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  82              		.loc 1 221 3 view .LVU15
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  83              		.loc 1 221 15 is_stmt 0 view .LVU16
  84 0036 FFF7FEFF 		bl	HAL_GetTick
  85              	.LVL5:
  86 003a 0446     		mov	r4, r0
  87              	.LVL6:
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
  88              		.loc 1 224 3 is_stmt 1 view .LVU17
  89 003c 0023     		movs	r3, #0
  90 003e AB60     		str	r3, [r5, #8]
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
  91              		.loc 1 227 3 view .LVU18
  92              	.LVL7:
  93              	.L5:
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
  94              		.loc 1 227 10 is_stmt 0 view .LVU19
  95 0040 414B     		ldr	r3, .L28
  96 0042 9B68     		ldr	r3, [r3, #8]
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
  97              		.loc 1 227 9 view .LVU20
  98 0044 13F00C0F 		tst	r3, #12
  99 0048 08D0     		beq	.L23
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 100              		.loc 1 229 5 is_stmt 1 view .LVU21
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 101              		.loc 1 229 10 is_stmt 0 view .LVU22
 102 004a FFF7FEFF 		bl	HAL_GetTick
 103              	.LVL8:
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 104              		.loc 1 229 24 view .LVU23
 105 004e 001B     		subs	r0, r0, r4
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 106              		.loc 1 229 8 view .LVU24
 107 0050 41F28833 		movw	r3, #5000
 108 0054 9842     		cmp	r0, r3
 109 0056 F3D9     		bls	.L5
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 110              		.loc 1 231 14 view .LVU25
 111 0058 0323     		movs	r3, #3
 112 005a E5E7     		b	.L3
 113              	.L23:
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 114              		.loc 1 236 3 is_stmt 1 view .LVU26
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 115              		.loc 1 236 15 is_stmt 0 view .LVU27
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 9


 116 005c FFF7FEFF 		bl	HAL_GetTick
 117              	.LVL9:
 118 0060 0446     		mov	r4, r0
 119              	.LVL10:
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 120              		.loc 1 239 3 is_stmt 1 view .LVU28
 121 0062 394A     		ldr	r2, .L28
 122 0064 1368     		ldr	r3, [r2]
 123 0066 23F45023 		bic	r3, r3, #851968
 124 006a 1360     		str	r3, [r2]
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 125              		.loc 1 242 3 view .LVU29
 126              	.LVL11:
 127              	.L7:
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 128              		.loc 1 242 10 is_stmt 0 view .LVU30
 129 006c 364B     		ldr	r3, .L28
 130 006e 1B68     		ldr	r3, [r3]
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 131              		.loc 1 242 9 view .LVU31
 132 0070 13F4003F 		tst	r3, #131072
 133 0074 06D0     		beq	.L24
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 134              		.loc 1 244 5 is_stmt 1 view .LVU32
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 135              		.loc 1 244 10 is_stmt 0 view .LVU33
 136 0076 FFF7FEFF 		bl	HAL_GetTick
 137              	.LVL12:
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 138              		.loc 1 244 24 view .LVU34
 139 007a 001B     		subs	r0, r0, r4
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 140              		.loc 1 244 8 view .LVU35
 141 007c 6428     		cmp	r0, #100
 142 007e F5D9     		bls	.L7
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 143              		.loc 1 246 14 view .LVU36
 144 0080 0323     		movs	r3, #3
 145 0082 D1E7     		b	.L3
 146              	.L24:
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 147              		.loc 1 251 3 is_stmt 1 view .LVU37
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 148              		.loc 1 251 15 is_stmt 0 view .LVU38
 149 0084 FFF7FEFF 		bl	HAL_GetTick
 150              	.LVL13:
 151 0088 0446     		mov	r4, r0
 152              	.LVL14:
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 153              		.loc 1 254 3 is_stmt 1 view .LVU39
 154 008a 2F4A     		ldr	r2, .L28
 155 008c 1368     		ldr	r3, [r2]
 156 008e 23F08073 		bic	r3, r3, #16777216
 157 0092 1360     		str	r3, [r2]
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 158              		.loc 1 257 3 view .LVU40
 159              	.LVL15:
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 10


 160              	.L9:
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 161              		.loc 1 257 10 is_stmt 0 view .LVU41
 162 0094 2C4B     		ldr	r3, .L28
 163 0096 1B68     		ldr	r3, [r3]
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 164              		.loc 1 257 9 view .LVU42
 165 0098 13F0007F 		tst	r3, #33554432
 166 009c 06D0     		beq	.L25
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 167              		.loc 1 259 5 is_stmt 1 view .LVU43
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 168              		.loc 1 259 10 is_stmt 0 view .LVU44
 169 009e FFF7FEFF 		bl	HAL_GetTick
 170              	.LVL16:
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 171              		.loc 1 259 24 view .LVU45
 172 00a2 001B     		subs	r0, r0, r4
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 173              		.loc 1 259 8 view .LVU46
 174 00a4 0228     		cmp	r0, #2
 175 00a6 F5D9     		bls	.L9
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 176              		.loc 1 261 14 view .LVU47
 177 00a8 0323     		movs	r3, #3
 178 00aa BDE7     		b	.L3
 179              	.L25:
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 180              		.loc 1 266 3 is_stmt 1 view .LVU48
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 181              		.loc 1 266 15 is_stmt 0 view .LVU49
 182 00ac FFF7FEFF 		bl	HAL_GetTick
 183              	.LVL17:
 184 00b0 0446     		mov	r4, r0
 185              	.LVL18:
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 186              		.loc 1 269 3 is_stmt 1 view .LVU50
 187 00b2 254A     		ldr	r2, .L28
 188 00b4 1368     		ldr	r3, [r2]
 189 00b6 23F08063 		bic	r3, r3, #67108864
 190 00ba 1360     		str	r3, [r2]
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 191              		.loc 1 272 3 view .LVU51
 192              	.LVL19:
 193              	.L11:
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 194              		.loc 1 272 10 is_stmt 0 view .LVU52
 195 00bc 224B     		ldr	r3, .L28
 196 00be 1B68     		ldr	r3, [r3]
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 197              		.loc 1 272 9 view .LVU53
 198 00c0 13F0006F 		tst	r3, #134217728
 199 00c4 06D0     		beq	.L26
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 200              		.loc 1 274 5 is_stmt 1 view .LVU54
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 201              		.loc 1 274 10 is_stmt 0 view .LVU55
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 11


 202 00c6 FFF7FEFF 		bl	HAL_GetTick
 203              	.LVL20:
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 204              		.loc 1 274 24 view .LVU56
 205 00ca 001B     		subs	r0, r0, r4
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 206              		.loc 1 274 8 view .LVU57
 207 00cc 6428     		cmp	r0, #100
 208 00ce F5D9     		bls	.L11
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 209              		.loc 1 276 14 view .LVU58
 210 00d0 0323     		movs	r3, #3
 211 00d2 A9E7     		b	.L3
 212              	.L26:
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 213              		.loc 1 281 3 is_stmt 1 view .LVU59
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 214              		.loc 1 281 15 is_stmt 0 view .LVU60
 215 00d4 FFF7FEFF 		bl	HAL_GetTick
 216              	.LVL21:
 217 00d8 0446     		mov	r4, r0
 218              	.LVL22:
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 219              		.loc 1 284 3 is_stmt 1 view .LVU61
 220 00da 1B4A     		ldr	r2, .L28
 221 00dc 1368     		ldr	r3, [r2]
 222 00de 23F08053 		bic	r3, r3, #268435456
 223 00e2 1360     		str	r3, [r2]
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 224              		.loc 1 287 3 view .LVU62
 225              	.LVL23:
 226              	.L13:
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 227              		.loc 1 287 10 is_stmt 0 view .LVU63
 228 00e4 184B     		ldr	r3, .L28
 229 00e6 1B68     		ldr	r3, [r3]
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 230              		.loc 1 287 9 view .LVU64
 231 00e8 13F0005F 		tst	r3, #536870912
 232 00ec 06D0     		beq	.L27
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 233              		.loc 1 289 5 is_stmt 1 view .LVU65
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 234              		.loc 1 289 10 is_stmt 0 view .LVU66
 235 00ee FFF7FEFF 		bl	HAL_GetTick
 236              	.LVL24:
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 237              		.loc 1 289 24 view .LVU67
 238 00f2 001B     		subs	r0, r0, r4
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 239              		.loc 1 289 8 view .LVU68
 240 00f4 6428     		cmp	r0, #100
 241 00f6 F5D9     		bls	.L13
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 242              		.loc 1 291 14 view .LVU69
 243 00f8 0323     		movs	r3, #3
 244 00fa 95E7     		b	.L3
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 12


 245              	.L27:
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 246              		.loc 1 296 3 is_stmt 1 view .LVU70
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 247              		.loc 1 296 16 is_stmt 0 view .LVU71
 248 00fc 124B     		ldr	r3, .L28
 249 00fe 134A     		ldr	r2, .L28+4
 250 0100 5A60     		str	r2, [r3, #4]
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 251              		.loc 1 299 3 is_stmt 1 view .LVU72
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 252              		.loc 1 299 19 is_stmt 0 view .LVU73
 253 0102 103A     		subs	r2, r2, #16
 254 0104 C3F88420 		str	r2, [r3, #132]
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 255              		.loc 1 302 3 is_stmt 1 view .LVU74
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 256              		.loc 1 302 19 is_stmt 0 view .LVU75
 257 0108 C3F88820 		str	r2, [r3, #136]
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 258              		.loc 1 305 3 is_stmt 1 view .LVU76
 259 010c DA68     		ldr	r2, [r3, #12]
 260 010e 22F4FE42 		bic	r2, r2, #32512
 261 0112 DA60     		str	r2, [r3, #12]
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 262              		.loc 1 308 3 view .LVU77
 263 0114 DA68     		ldr	r2, [r3, #12]
 264 0116 42F47F02 		orr	r2, r2, #16711680
 265 011a DA60     		str	r2, [r3, #12]
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 266              		.loc 1 311 3 view .LVU78
 267 011c 5A6F     		ldr	r2, [r3, #116]
 268 011e 22F00102 		bic	r2, r2, #1
 269 0122 5A67     		str	r2, [r3, #116]
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 270              		.loc 1 314 3 view .LVU79
 271 0124 5A6F     		ldr	r2, [r3, #116]
 272 0126 42F08072 		orr	r2, r2, #16777216
 273 012a 5A67     		str	r2, [r3, #116]
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 274              		.loc 1 317 3 view .LVU80
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 275              		.loc 1 317 19 is_stmt 0 view .LVU81
 276 012c 084B     		ldr	r3, .L28+8
 277 012e 094A     		ldr	r2, .L28+12
 278 0130 1A60     		str	r2, [r3]
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 279              		.loc 1 320 3 is_stmt 1 view .LVU82
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 280              		.loc 1 320 7 is_stmt 0 view .LVU83
 281 0132 094B     		ldr	r3, .L28+16
 282 0134 1868     		ldr	r0, [r3]
 283 0136 FFF7FEFF 		bl	HAL_InitTick
 284              	.LVL25:
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 285              		.loc 1 320 6 view .LVU84
 286 013a 0346     		mov	r3, r0
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 13


 287 013c 0028     		cmp	r0, #0
 288 013e 3FF473AF 		beq	.L3
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 289              		.loc 1 322 12 view .LVU85
 290 0142 0123     		movs	r3, #1
 291 0144 70E7     		b	.L3
 292              	.L29:
 293 0146 00BF     		.align	2
 294              	.L28:
 295 0148 00380240 		.word	1073887232
 296 014c 10300024 		.word	603992080
 297 0150 00000000 		.word	SystemCoreClock
 298 0154 0024F400 		.word	16000000
 299 0158 00000000 		.word	uwTickPrio
 300              		.cfi_endproc
 301              	.LFE141:
 303              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 304              		.align	1
 305              		.global	HAL_RCC_OscConfig
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv5-d16
 311              	HAL_RCC_OscConfig:
 312              	.LVL26:
 313              	.LFB142:
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         supported by this function. User should request a transition to LSE Off
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         supported by this function. User should request a transition to HSE Off
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval HAL status
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 314              		.loc 1 345 1 is_stmt 1 view -0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 8
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   uint32_t tickstart;
 318              		.loc 1 346 3 view .LVU87
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   uint32_t pll_config;
 319              		.loc 1 347 3 view .LVU88
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   FlagStatus pwrclkchanged = RESET;
 320              		.loc 1 348 3 view .LVU89
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Check Null pointer */
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if (RCC_OscInitStruct == NULL)
 321              		.loc 1 351 3 view .LVU90
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 14


 322              		.loc 1 351 6 is_stmt 0 view .LVU91
 323 0000 0028     		cmp	r0, #0
 324 0002 00F00682 		beq	.L82
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   uint32_t tickstart;
 325              		.loc 1 345 1 view .LVU92
 326 0006 70B5     		push	{r4, r5, r6, lr}
 327              	.LCFI1:
 328              		.cfi_def_cfa_offset 16
 329              		.cfi_offset 4, -16
 330              		.cfi_offset 5, -12
 331              		.cfi_offset 6, -8
 332              		.cfi_offset 14, -4
 333 0008 82B0     		sub	sp, sp, #8
 334              	.LCFI2:
 335              		.cfi_def_cfa_offset 24
 336 000a 0446     		mov	r4, r0
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     return HAL_ERROR;
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Check the parameters */
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 337              		.loc 1 357 3 is_stmt 1 view .LVU93
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 338              		.loc 1 360 3 view .LVU94
 339              		.loc 1 360 26 is_stmt 0 view .LVU95
 340 000c 0368     		ldr	r3, [r0]
 341              		.loc 1 360 6 view .LVU96
 342 000e 13F0010F 		tst	r3, #1
 343 0012 29D0     		beq	.L32
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check the parameters */
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 344              		.loc 1 363 5 is_stmt 1 view .LVU97
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 345              		.loc 1 365 5 view .LVU98
 346              		.loc 1 365 10 is_stmt 0 view .LVU99
 347 0014 A74B     		ldr	r3, .L124
 348 0016 9B68     		ldr	r3, [r3, #8]
 349 0018 03F00C03 		and	r3, r3, #12
 350              		.loc 1 365 8 view .LVU100
 351 001c 042B     		cmp	r3, #4
 352 001e 1AD0     		beq	.L33
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & R
 353              		.loc 1 366 14 view .LVU101
 354 0020 A44B     		ldr	r3, .L124
 355 0022 9B68     		ldr	r3, [r3, #8]
 356 0024 03F00C03 		and	r3, r3, #12
 357              		.loc 1 366 9 view .LVU102
 358 0028 082B     		cmp	r3, #8
 359 002a 0FD0     		beq	.L110
 360              	.L34:
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 15


 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         return HAL_ERROR;
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     else
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 361              		.loc 1 376 7 is_stmt 1 view .LVU103
 362              		.loc 1 376 7 view .LVU104
 363 002c 6368     		ldr	r3, [r4, #4]
 364 002e B3F5803F 		cmp	r3, #65536
 365 0032 40D0     		beq	.L111
 366              		.loc 1 376 7 discriminator 2 view .LVU105
 367 0034 002B     		cmp	r3, #0
 368 0036 54D1     		bne	.L37
 369              		.loc 1 376 7 discriminator 3 view .LVU106
 370 0038 9E4B     		ldr	r3, .L124
 371 003a 1A68     		ldr	r2, [r3]
 372 003c 22F48032 		bic	r2, r2, #65536
 373 0040 1A60     		str	r2, [r3]
 374              		.loc 1 376 7 discriminator 3 view .LVU107
 375 0042 1A68     		ldr	r2, [r3]
 376 0044 22F48022 		bic	r2, r2, #262144
 377 0048 1A60     		str	r2, [r3]
 378 004a 39E0     		b	.L36
 379              	.L110:
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & R
 380              		.loc 1 366 87 is_stmt 0 discriminator 1 view .LVU108
 381 004c 994B     		ldr	r3, .L124
 382 004e 5B68     		ldr	r3, [r3, #4]
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & R
 383              		.loc 1 366 79 discriminator 1 view .LVU109
 384 0050 13F4800F 		tst	r3, #4194304
 385 0054 EAD0     		beq	.L34
 386              	.L33:
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 387              		.loc 1 368 7 is_stmt 1 view .LVU110
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 388              		.loc 1 368 12 is_stmt 0 view .LVU111
 389 0056 974B     		ldr	r3, .L124
 390 0058 1B68     		ldr	r3, [r3]
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 391              		.loc 1 368 10 view .LVU112
 392 005a 13F4003F 		tst	r3, #131072
 393 005e 03D0     		beq	.L32
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 394              		.loc 1 368 79 discriminator 1 view .LVU113
 395 0060 6368     		ldr	r3, [r4, #4]
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 396              		.loc 1 368 58 discriminator 1 view .LVU114
 397 0062 002B     		cmp	r3, #0
 398 0064 00F0D781 		beq	.L112
 399              	.LVL27:
 400              	.L32:
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Check the HSE State */
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 16


 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Get Start Tick*/
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Wait till HSE is ready */
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       else
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Get Start Tick*/
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Wait till HSE is bypassed or disabled */
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 401              		.loc 1 410 3 is_stmt 1 view .LVU115
 402              		.loc 1 410 26 is_stmt 0 view .LVU116
 403 0068 2368     		ldr	r3, [r4]
 404              		.loc 1 410 6 view .LVU117
 405 006a 13F0020F 		tst	r3, #2
 406 006e 74D0     		beq	.L44
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check the parameters */
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 407              		.loc 1 413 5 is_stmt 1 view .LVU118
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 408              		.loc 1 414 5 view .LVU119
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 409              		.loc 1 417 5 view .LVU120
 410              		.loc 1 417 10 is_stmt 0 view .LVU121
 411 0070 904B     		ldr	r3, .L124
 412 0072 9B68     		ldr	r3, [r3, #8]
 413              		.loc 1 417 8 view .LVU122
 414 0074 13F00C0F 		tst	r3, #12
 415 0078 5ED0     		beq	.L45
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & R
 416              		.loc 1 418 14 view .LVU123
 417 007a 8E4B     		ldr	r3, .L124
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 17


 418 007c 9B68     		ldr	r3, [r3, #8]
 419 007e 03F00C03 		and	r3, r3, #12
 420              		.loc 1 418 9 view .LVU124
 421 0082 082B     		cmp	r3, #8
 422 0084 53D0     		beq	.L113
 423              	.L46:
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         return HAL_ERROR;
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       else
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     else
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Check the HSI State */
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 424              		.loc 1 435 7 is_stmt 1 view .LVU125
 425              		.loc 1 435 29 is_stmt 0 view .LVU126
 426 0086 E368     		ldr	r3, [r4, #12]
 427              		.loc 1 435 10 view .LVU127
 428 0088 002B     		cmp	r3, #0
 429 008a 00F08980 		beq	.L48
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 430              		.loc 1 438 9 is_stmt 1 view .LVU128
 431 008e 894A     		ldr	r2, .L124
 432 0090 1368     		ldr	r3, [r2]
 433 0092 43F00103 		orr	r3, r3, #1
 434 0096 1360     		str	r3, [r2]
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Get Start Tick*/
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 435              		.loc 1 441 9 view .LVU129
 436              		.loc 1 441 21 is_stmt 0 view .LVU130
 437 0098 FFF7FEFF 		bl	HAL_GetTick
 438              	.LVL28:
 439 009c 0546     		mov	r5, r0
 440              	.LVL29:
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Wait till HSI is ready */
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 441              		.loc 1 444 9 is_stmt 1 view .LVU131
 442              	.L49:
 443              		.loc 1 444 16 is_stmt 0 view .LVU132
 444 009e 854B     		ldr	r3, .L124
 445 00a0 1B68     		ldr	r3, [r3]
 446              		.loc 1 444 15 view .LVU133
 447 00a2 13F0020F 		tst	r3, #2
 448 00a6 72D1     		bne	.L114
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 18


 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 449              		.loc 1 446 11 is_stmt 1 view .LVU134
 450              		.loc 1 446 16 is_stmt 0 view .LVU135
 451 00a8 FFF7FEFF 		bl	HAL_GetTick
 452              	.LVL30:
 453              		.loc 1 446 30 view .LVU136
 454 00ac 401B     		subs	r0, r0, r5
 455              		.loc 1 446 14 view .LVU137
 456 00ae 0228     		cmp	r0, #2
 457 00b0 F5D9     		bls	.L49
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 458              		.loc 1 448 20 view .LVU138
 459 00b2 0320     		movs	r0, #3
 460 00b4 B4E1     		b	.L31
 461              	.LVL31:
 462              	.L111:
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 463              		.loc 1 376 7 is_stmt 1 discriminator 1 view .LVU139
 464 00b6 7F4A     		ldr	r2, .L124
 465 00b8 1368     		ldr	r3, [r2]
 466 00ba 43F48033 		orr	r3, r3, #65536
 467 00be 1360     		str	r3, [r2]
 468              	.L36:
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 469              		.loc 1 379 7 view .LVU140
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 470              		.loc 1 379 28 is_stmt 0 view .LVU141
 471 00c0 6368     		ldr	r3, [r4, #4]
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 472              		.loc 1 379 10 view .LVU142
 473 00c2 2BB3     		cbz	r3, .L39
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 474              		.loc 1 382 9 is_stmt 1 view .LVU143
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 475              		.loc 1 382 21 is_stmt 0 view .LVU144
 476 00c4 FFF7FEFF 		bl	HAL_GetTick
 477              	.LVL32:
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 478              		.loc 1 382 21 view .LVU145
 479 00c8 0546     		mov	r5, r0
 480              	.LVL33:
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 481              		.loc 1 385 9 is_stmt 1 view .LVU146
 482              	.L40:
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 483              		.loc 1 385 16 is_stmt 0 view .LVU147
 484 00ca 7A4B     		ldr	r3, .L124
 485 00cc 1B68     		ldr	r3, [r3]
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 486              		.loc 1 385 15 view .LVU148
 487 00ce 13F4003F 		tst	r3, #131072
 488 00d2 C9D1     		bne	.L32
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 489              		.loc 1 387 11 is_stmt 1 view .LVU149
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 19


 490              		.loc 1 387 16 is_stmt 0 view .LVU150
 491 00d4 FFF7FEFF 		bl	HAL_GetTick
 492              	.LVL34:
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 493              		.loc 1 387 30 view .LVU151
 494 00d8 401B     		subs	r0, r0, r5
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 495              		.loc 1 387 14 view .LVU152
 496 00da 6428     		cmp	r0, #100
 497 00dc F5D9     		bls	.L40
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 498              		.loc 1 389 20 view .LVU153
 499 00de 0320     		movs	r0, #3
 500 00e0 9EE1     		b	.L31
 501              	.LVL35:
 502              	.L37:
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 503              		.loc 1 376 7 is_stmt 1 discriminator 4 view .LVU154
 504 00e2 B3F5A02F 		cmp	r3, #327680
 505 00e6 09D0     		beq	.L115
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 506              		.loc 1 376 7 discriminator 6 view .LVU155
 507 00e8 724B     		ldr	r3, .L124
 508 00ea 1A68     		ldr	r2, [r3]
 509 00ec 22F48032 		bic	r2, r2, #65536
 510 00f0 1A60     		str	r2, [r3]
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 511              		.loc 1 376 7 discriminator 6 view .LVU156
 512 00f2 1A68     		ldr	r2, [r3]
 513 00f4 22F48022 		bic	r2, r2, #262144
 514 00f8 1A60     		str	r2, [r3]
 515 00fa E1E7     		b	.L36
 516              	.L115:
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 517              		.loc 1 376 7 discriminator 5 view .LVU157
 518 00fc 6D4B     		ldr	r3, .L124
 519 00fe 1A68     		ldr	r2, [r3]
 520 0100 42F48022 		orr	r2, r2, #262144
 521 0104 1A60     		str	r2, [r3]
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 522              		.loc 1 376 7 discriminator 5 view .LVU158
 523 0106 1A68     		ldr	r2, [r3]
 524 0108 42F48032 		orr	r2, r2, #65536
 525 010c 1A60     		str	r2, [r3]
 526 010e D7E7     		b	.L36
 527              	.L39:
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 528              		.loc 1 396 9 view .LVU159
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 529              		.loc 1 396 21 is_stmt 0 view .LVU160
 530 0110 FFF7FEFF 		bl	HAL_GetTick
 531              	.LVL36:
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 532              		.loc 1 396 21 view .LVU161
 533 0114 0546     		mov	r5, r0
 534              	.LVL37:
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 20


 535              		.loc 1 399 9 is_stmt 1 view .LVU162
 536              	.L42:
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 537              		.loc 1 399 16 is_stmt 0 view .LVU163
 538 0116 674B     		ldr	r3, .L124
 539 0118 1B68     		ldr	r3, [r3]
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 540              		.loc 1 399 15 view .LVU164
 541 011a 13F4003F 		tst	r3, #131072
 542 011e A3D0     		beq	.L32
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 543              		.loc 1 401 11 is_stmt 1 view .LVU165
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 544              		.loc 1 401 16 is_stmt 0 view .LVU166
 545 0120 FFF7FEFF 		bl	HAL_GetTick
 546              	.LVL38:
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 547              		.loc 1 401 30 view .LVU167
 548 0124 401B     		subs	r0, r0, r5
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 549              		.loc 1 401 14 view .LVU168
 550 0126 6428     		cmp	r0, #100
 551 0128 F5D9     		bls	.L42
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 552              		.loc 1 403 20 view .LVU169
 553 012a 0320     		movs	r0, #3
 554 012c 78E1     		b	.L31
 555              	.LVL39:
 556              	.L113:
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 557              		.loc 1 418 87 discriminator 1 view .LVU170
 558 012e 614B     		ldr	r3, .L124
 559 0130 5B68     		ldr	r3, [r3, #4]
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 560              		.loc 1 418 79 discriminator 1 view .LVU171
 561 0132 13F4800F 		tst	r3, #4194304
 562 0136 A6D1     		bne	.L46
 563              	.L45:
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 564              		.loc 1 421 7 is_stmt 1 view .LVU172
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 565              		.loc 1 421 12 is_stmt 0 view .LVU173
 566 0138 5E4B     		ldr	r3, .L124
 567 013a 1B68     		ldr	r3, [r3]
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 568              		.loc 1 421 10 view .LVU174
 569 013c 13F0020F 		tst	r3, #2
 570 0140 03D0     		beq	.L47
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 571              		.loc 1 421 79 discriminator 1 view .LVU175
 572 0142 E368     		ldr	r3, [r4, #12]
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 573              		.loc 1 421 58 discriminator 1 view .LVU176
 574 0144 012B     		cmp	r3, #1
 575 0146 40F06881 		bne	.L86
 576              	.L47:
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 21


 577              		.loc 1 429 9 is_stmt 1 view .LVU177
 578 014a 5A4A     		ldr	r2, .L124
 579 014c 1368     		ldr	r3, [r2]
 580 014e 23F0F803 		bic	r3, r3, #248
 581 0152 2169     		ldr	r1, [r4, #16]
 582 0154 43EAC103 		orr	r3, r3, r1, lsl #3
 583 0158 1360     		str	r3, [r2]
 584              	.L44:
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       else
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Get Start Tick*/
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Wait till HSI is ready */
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 585              		.loc 1 475 3 view .LVU178
 586              		.loc 1 475 26 is_stmt 0 view .LVU179
 587 015a 2368     		ldr	r3, [r4]
 588              		.loc 1 475 6 view .LVU180
 589 015c 13F0080F 		tst	r3, #8
 590 0160 46D0     		beq	.L53
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check the parameters */
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 591              		.loc 1 478 5 is_stmt 1 view .LVU181
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check the LSI State */
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 592              		.loc 1 481 5 view .LVU182
 593              		.loc 1 481 27 is_stmt 0 view .LVU183
 594 0162 6369     		ldr	r3, [r4, #20]
 595              		.loc 1 481 8 view .LVU184
 596 0164 83B3     		cbz	r3, .L54
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 597              		.loc 1 484 7 is_stmt 1 view .LVU185
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 22


 598 0166 534A     		ldr	r2, .L124
 599 0168 536F     		ldr	r3, [r2, #116]
 600 016a 43F00103 		orr	r3, r3, #1
 601 016e 5367     		str	r3, [r2, #116]
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Get Start Tick*/
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 602              		.loc 1 487 7 view .LVU186
 603              		.loc 1 487 19 is_stmt 0 view .LVU187
 604 0170 FFF7FEFF 		bl	HAL_GetTick
 605              	.LVL40:
 606 0174 0546     		mov	r5, r0
 607              	.LVL41:
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Wait till LSI is ready */
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 608              		.loc 1 490 7 is_stmt 1 view .LVU188
 609              	.L55:
 610              		.loc 1 490 14 is_stmt 0 view .LVU189
 611 0176 4F4B     		ldr	r3, .L124
 612 0178 5B6F     		ldr	r3, [r3, #116]
 613              		.loc 1 490 13 view .LVU190
 614 017a 13F0020F 		tst	r3, #2
 615 017e 37D1     		bne	.L53
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 616              		.loc 1 492 9 is_stmt 1 view .LVU191
 617              		.loc 1 492 14 is_stmt 0 view .LVU192
 618 0180 FFF7FEFF 		bl	HAL_GetTick
 619              	.LVL42:
 620              		.loc 1 492 28 view .LVU193
 621 0184 401B     		subs	r0, r0, r5
 622              		.loc 1 492 12 view .LVU194
 623 0186 0228     		cmp	r0, #2
 624 0188 F5D9     		bls	.L55
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 625              		.loc 1 494 18 view .LVU195
 626 018a 0320     		movs	r0, #3
 627 018c 48E1     		b	.L31
 628              	.L114:
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 629              		.loc 1 453 9 is_stmt 1 view .LVU196
 630 018e 494A     		ldr	r2, .L124
 631 0190 1368     		ldr	r3, [r2]
 632 0192 23F0F803 		bic	r3, r3, #248
 633 0196 2169     		ldr	r1, [r4, #16]
 634 0198 43EAC103 		orr	r3, r3, r1, lsl #3
 635 019c 1360     		str	r3, [r2]
 636 019e DCE7     		b	.L44
 637              	.LVL43:
 638              	.L48:
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 639              		.loc 1 458 9 view .LVU197
 640 01a0 444A     		ldr	r2, .L124
 641 01a2 1368     		ldr	r3, [r2]
 642 01a4 23F00103 		bic	r3, r3, #1
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 23


 643 01a8 1360     		str	r3, [r2]
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 644              		.loc 1 461 9 view .LVU198
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 645              		.loc 1 461 21 is_stmt 0 view .LVU199
 646 01aa FFF7FEFF 		bl	HAL_GetTick
 647              	.LVL44:
 648 01ae 0546     		mov	r5, r0
 649              	.LVL45:
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 650              		.loc 1 464 9 is_stmt 1 view .LVU200
 651              	.L51:
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 652              		.loc 1 464 16 is_stmt 0 view .LVU201
 653 01b0 404B     		ldr	r3, .L124
 654 01b2 1B68     		ldr	r3, [r3]
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 655              		.loc 1 464 15 view .LVU202
 656 01b4 13F0020F 		tst	r3, #2
 657 01b8 CFD0     		beq	.L44
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 658              		.loc 1 466 11 is_stmt 1 view .LVU203
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 659              		.loc 1 466 16 is_stmt 0 view .LVU204
 660 01ba FFF7FEFF 		bl	HAL_GetTick
 661              	.LVL46:
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 662              		.loc 1 466 30 view .LVU205
 663 01be 401B     		subs	r0, r0, r5
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 664              		.loc 1 466 14 view .LVU206
 665 01c0 0228     		cmp	r0, #2
 666 01c2 F5D9     		bls	.L51
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 667              		.loc 1 468 20 view .LVU207
 668 01c4 0320     		movs	r0, #3
 669 01c6 2BE1     		b	.L31
 670              	.LVL47:
 671              	.L54:
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     else
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 672              		.loc 1 501 7 is_stmt 1 view .LVU208
 673 01c8 3A4A     		ldr	r2, .L124
 674 01ca 536F     		ldr	r3, [r2, #116]
 675 01cc 23F00103 		bic	r3, r3, #1
 676 01d0 5367     		str	r3, [r2, #116]
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Get Start Tick*/
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 677              		.loc 1 504 7 view .LVU209
 678              		.loc 1 504 19 is_stmt 0 view .LVU210
 679 01d2 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 24


 680              	.LVL48:
 681 01d6 0546     		mov	r5, r0
 682              	.LVL49:
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Wait till LSI is ready */
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 683              		.loc 1 507 7 is_stmt 1 view .LVU211
 684              	.L57:
 685              		.loc 1 507 14 is_stmt 0 view .LVU212
 686 01d8 364B     		ldr	r3, .L124
 687 01da 5B6F     		ldr	r3, [r3, #116]
 688              		.loc 1 507 13 view .LVU213
 689 01dc 13F0020F 		tst	r3, #2
 690 01e0 06D0     		beq	.L53
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 691              		.loc 1 509 9 is_stmt 1 view .LVU214
 692              		.loc 1 509 14 is_stmt 0 view .LVU215
 693 01e2 FFF7FEFF 		bl	HAL_GetTick
 694              	.LVL50:
 695              		.loc 1 509 28 view .LVU216
 696 01e6 401B     		subs	r0, r0, r5
 697              		.loc 1 509 12 view .LVU217
 698 01e8 0228     		cmp	r0, #2
 699 01ea F5D9     		bls	.L57
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 700              		.loc 1 511 18 view .LVU218
 701 01ec 0320     		movs	r0, #3
 702 01ee 17E1     		b	.L31
 703              	.LVL51:
 704              	.L53:
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 705              		.loc 1 517 3 is_stmt 1 view .LVU219
 706              		.loc 1 517 26 is_stmt 0 view .LVU220
 707 01f0 2368     		ldr	r3, [r4]
 708              		.loc 1 517 6 view .LVU221
 709 01f2 13F0040F 		tst	r3, #4
 710 01f6 7DD0     		beq	.L59
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check the parameters */
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 711              		.loc 1 520 5 is_stmt 1 view .LVU222
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 712              		.loc 1 524 5 view .LVU223
 713              		.loc 1 524 9 is_stmt 0 view .LVU224
 714 01f8 2E4B     		ldr	r3, .L124
 715 01fa 1B6C     		ldr	r3, [r3, #64]
 716              		.loc 1 524 8 view .LVU225
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 25


 717 01fc 13F0805F 		tst	r3, #268435456
 718 0200 1ED1     		bne	.L91
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Enable Power Clock*/
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 719              		.loc 1 527 7 is_stmt 1 view .LVU226
 720              	.LBB4:
 721              		.loc 1 527 7 view .LVU227
 722              		.loc 1 527 7 view .LVU228
 723 0202 2C4B     		ldr	r3, .L124
 724 0204 1A6C     		ldr	r2, [r3, #64]
 725 0206 42F08052 		orr	r2, r2, #268435456
 726 020a 1A64     		str	r2, [r3, #64]
 727              		.loc 1 527 7 view .LVU229
 728 020c 1B6C     		ldr	r3, [r3, #64]
 729 020e 03F08053 		and	r3, r3, #268435456
 730 0212 0193     		str	r3, [sp, #4]
 731              		.loc 1 527 7 view .LVU230
 732 0214 019B     		ldr	r3, [sp, #4]
 733              	.LBE4:
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       pwrclkchanged = SET;
 734              		.loc 1 528 7 view .LVU231
 735              	.LVL52:
 736              		.loc 1 528 21 is_stmt 0 view .LVU232
 737 0216 0125     		movs	r5, #1
 738              	.LVL53:
 739              	.L60:
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 740              		.loc 1 531 5 is_stmt 1 view .LVU233
 741              		.loc 1 531 9 is_stmt 0 view .LVU234
 742 0218 274B     		ldr	r3, .L124+4
 743 021a 1B68     		ldr	r3, [r3]
 744              		.loc 1 531 8 view .LVU235
 745 021c 13F4807F 		tst	r3, #256
 746 0220 10D0     		beq	.L116
 747              	.L61:
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       PWR->CR1 |= PWR_CR1_DBP;
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 748              		.loc 1 549 5 is_stmt 1 view .LVU236
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 26


 749              		.loc 1 549 5 view .LVU237
 750 0222 A368     		ldr	r3, [r4, #8]
 751 0224 012B     		cmp	r3, #1
 752 0226 21D0     		beq	.L117
 753              		.loc 1 549 5 discriminator 2 view .LVU238
 754 0228 002B     		cmp	r3, #0
 755 022a 37D1     		bne	.L66
 756              		.loc 1 549 5 discriminator 3 view .LVU239
 757 022c 214B     		ldr	r3, .L124
 758 022e 1A6F     		ldr	r2, [r3, #112]
 759 0230 22F00102 		bic	r2, r2, #1
 760 0234 1A67     		str	r2, [r3, #112]
 761              		.loc 1 549 5 discriminator 3 view .LVU240
 762 0236 1A6F     		ldr	r2, [r3, #112]
 763 0238 22F00402 		bic	r2, r2, #4
 764 023c 1A67     		str	r2, [r3, #112]
 765 023e 1AE0     		b	.L65
 766              	.LVL54:
 767              	.L91:
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 768              		.loc 1 348 14 is_stmt 0 view .LVU241
 769 0240 0025     		movs	r5, #0
 770 0242 E9E7     		b	.L60
 771              	.LVL55:
 772              	.L116:
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 773              		.loc 1 534 7 is_stmt 1 view .LVU242
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 774              		.loc 1 534 16 is_stmt 0 view .LVU243
 775 0244 1C4A     		ldr	r2, .L124+4
 776 0246 1368     		ldr	r3, [r2]
 777 0248 43F48073 		orr	r3, r3, #256
 778 024c 1360     		str	r3, [r2]
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 779              		.loc 1 537 7 is_stmt 1 view .LVU244
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 780              		.loc 1 537 19 is_stmt 0 view .LVU245
 781 024e FFF7FEFF 		bl	HAL_GetTick
 782              	.LVL56:
 783 0252 0646     		mov	r6, r0
 784              	.LVL57:
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 785              		.loc 1 539 7 is_stmt 1 view .LVU246
 786              	.L62:
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 787              		.loc 1 539 14 is_stmt 0 view .LVU247
 788 0254 184B     		ldr	r3, .L124+4
 789 0256 1B68     		ldr	r3, [r3]
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 790              		.loc 1 539 13 view .LVU248
 791 0258 13F4807F 		tst	r3, #256
 792 025c E1D1     		bne	.L61
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 793              		.loc 1 541 9 is_stmt 1 view .LVU249
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 794              		.loc 1 541 14 is_stmt 0 view .LVU250
 795 025e FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 27


 796              	.LVL58:
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 797              		.loc 1 541 28 view .LVU251
 798 0262 801B     		subs	r0, r0, r6
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 799              		.loc 1 541 12 view .LVU252
 800 0264 6428     		cmp	r0, #100
 801 0266 F5D9     		bls	.L62
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 802              		.loc 1 543 18 view .LVU253
 803 0268 0320     		movs	r0, #3
 804 026a D9E0     		b	.L31
 805              	.LVL59:
 806              	.L117:
 807              		.loc 1 549 5 is_stmt 1 discriminator 1 view .LVU254
 808 026c 114A     		ldr	r2, .L124
 809 026e 136F     		ldr	r3, [r2, #112]
 810 0270 43F00103 		orr	r3, r3, #1
 811 0274 1367     		str	r3, [r2, #112]
 812              	.L65:
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check the LSE State */
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 813              		.loc 1 551 5 view .LVU255
 814              		.loc 1 551 27 is_stmt 0 view .LVU256
 815 0276 A368     		ldr	r3, [r4, #8]
 816              		.loc 1 551 8 view .LVU257
 817 0278 53B3     		cbz	r3, .L68
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Get Start Tick*/
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 818              		.loc 1 554 7 is_stmt 1 view .LVU258
 819              		.loc 1 554 19 is_stmt 0 view .LVU259
 820 027a FFF7FEFF 		bl	HAL_GetTick
 821              	.LVL60:
 822 027e 0646     		mov	r6, r0
 823              	.LVL61:
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Wait till LSE is ready */
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 824              		.loc 1 557 7 is_stmt 1 view .LVU260
 825              	.L69:
 826              		.loc 1 557 14 is_stmt 0 view .LVU261
 827 0280 0C4B     		ldr	r3, .L124
 828 0282 1B6F     		ldr	r3, [r3, #112]
 829              		.loc 1 557 13 view .LVU262
 830 0284 13F0020F 		tst	r3, #2
 831 0288 33D1     		bne	.L71
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 832              		.loc 1 559 9 is_stmt 1 view .LVU263
 833              		.loc 1 559 14 is_stmt 0 view .LVU264
 834 028a FFF7FEFF 		bl	HAL_GetTick
 835              	.LVL62:
 836              		.loc 1 559 28 view .LVU265
 837 028e 801B     		subs	r0, r0, r6
 838              		.loc 1 559 12 view .LVU266
 839 0290 41F28833 		movw	r3, #5000
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 28


 840 0294 9842     		cmp	r0, r3
 841 0296 F3D9     		bls	.L69
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 842              		.loc 1 561 18 view .LVU267
 843 0298 0320     		movs	r0, #3
 844 029a C1E0     		b	.L31
 845              	.LVL63:
 846              	.L66:
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check the LSE State */
 847              		.loc 1 549 5 is_stmt 1 discriminator 4 view .LVU268
 848 029c 052B     		cmp	r3, #5
 849 029e 0DD0     		beq	.L118
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check the LSE State */
 850              		.loc 1 549 5 discriminator 6 view .LVU269
 851 02a0 044B     		ldr	r3, .L124
 852 02a2 1A6F     		ldr	r2, [r3, #112]
 853 02a4 22F00102 		bic	r2, r2, #1
 854 02a8 1A67     		str	r2, [r3, #112]
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check the LSE State */
 855              		.loc 1 549 5 discriminator 6 view .LVU270
 856 02aa 1A6F     		ldr	r2, [r3, #112]
 857 02ac 22F00402 		bic	r2, r2, #4
 858 02b0 1A67     		str	r2, [r3, #112]
 859 02b2 E0E7     		b	.L65
 860              	.L125:
 861              		.align	2
 862              	.L124:
 863 02b4 00380240 		.word	1073887232
 864 02b8 00700040 		.word	1073770496
 865              	.L118:
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check the LSE State */
 866              		.loc 1 549 5 discriminator 5 view .LVU271
 867 02bc 604B     		ldr	r3, .L126
 868 02be 1A6F     		ldr	r2, [r3, #112]
 869 02c0 42F00402 		orr	r2, r2, #4
 870 02c4 1A67     		str	r2, [r3, #112]
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check the LSE State */
 871              		.loc 1 549 5 discriminator 5 view .LVU272
 872 02c6 1A6F     		ldr	r2, [r3, #112]
 873 02c8 42F00102 		orr	r2, r2, #1
 874 02cc 1A67     		str	r2, [r3, #112]
 875 02ce D2E7     		b	.L65
 876              	.L68:
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     else
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Get Start Tick*/
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 877              		.loc 1 568 7 view .LVU273
 878              		.loc 1 568 19 is_stmt 0 view .LVU274
 879 02d0 FFF7FEFF 		bl	HAL_GetTick
 880              	.LVL64:
 881 02d4 0646     		mov	r6, r0
 882              	.LVL65:
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 29


 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Wait till LSE is ready */
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 883              		.loc 1 571 7 is_stmt 1 view .LVU275
 884              	.L72:
 885              		.loc 1 571 14 is_stmt 0 view .LVU276
 886 02d6 5A4B     		ldr	r3, .L126
 887 02d8 1B6F     		ldr	r3, [r3, #112]
 888              		.loc 1 571 13 view .LVU277
 889 02da 13F0020F 		tst	r3, #2
 890 02de 08D0     		beq	.L71
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 891              		.loc 1 573 9 is_stmt 1 view .LVU278
 892              		.loc 1 573 14 is_stmt 0 view .LVU279
 893 02e0 FFF7FEFF 		bl	HAL_GetTick
 894              	.LVL66:
 895              		.loc 1 573 28 view .LVU280
 896 02e4 801B     		subs	r0, r0, r6
 897              		.loc 1 573 12 view .LVU281
 898 02e6 41F28833 		movw	r3, #5000
 899 02ea 9842     		cmp	r0, r3
 900 02ec F3D9     		bls	.L72
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 901              		.loc 1 575 18 view .LVU282
 902 02ee 0320     		movs	r0, #3
 903 02f0 96E0     		b	.L31
 904              	.L71:
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if (pwrclkchanged == SET)
 905              		.loc 1 581 5 is_stmt 1 view .LVU283
 906              		.loc 1 581 8 is_stmt 0 view .LVU284
 907 02f2 FDB9     		cbnz	r5, .L119
 908              	.LVL67:
 909              	.L59:
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Check the parameters */
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 910              		.loc 1 588 3 is_stmt 1 view .LVU285
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 911              		.loc 1 589 3 view .LVU286
 912              		.loc 1 589 30 is_stmt 0 view .LVU287
 913 02f4 A369     		ldr	r3, [r4, #24]
 914              		.loc 1 589 6 view .LVU288
 915 02f6 002B     		cmp	r3, #0
 916 02f8 00F09180 		beq	.L95
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 30


 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 917              		.loc 1 592 5 is_stmt 1 view .LVU289
 918              		.loc 1 592 9 is_stmt 0 view .LVU290
 919 02fc 504A     		ldr	r2, .L126
 920 02fe 9268     		ldr	r2, [r2, #8]
 921 0300 02F00C02 		and	r2, r2, #12
 922              		.loc 1 592 8 view .LVU291
 923 0304 082A     		cmp	r2, #8
 924 0306 59D0     		beq	.L74
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 925              		.loc 1 594 7 is_stmt 1 view .LVU292
 926              		.loc 1 594 10 is_stmt 0 view .LVU293
 927 0308 022B     		cmp	r3, #2
 928 030a 19D0     		beq	.L120
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Check the parameters */
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #if defined (RCC_PLLCFGR_PLLR)
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #endif
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Disable the main PLL. */
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Get Start Tick*/
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Wait till PLL is ready */
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #if defined (RCC_PLLCFGR_PLLR)
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLN,
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLP,
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLQ,
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLR);
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #else
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLN,
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLP,
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLQ);
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #endif
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 31


 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Enable the main PLL. */
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Get Start Tick*/
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Wait till PLL is ready */
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       else
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Disable the main PLL. */
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 929              		.loc 1 655 9 is_stmt 1 view .LVU294
 930 030c 4C4A     		ldr	r2, .L126
 931 030e 1368     		ldr	r3, [r2]
 932 0310 23F08073 		bic	r3, r3, #16777216
 933 0314 1360     		str	r3, [r2]
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Get Start Tick*/
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 934              		.loc 1 658 9 view .LVU295
 935              		.loc 1 658 21 is_stmt 0 view .LVU296
 936 0316 FFF7FEFF 		bl	HAL_GetTick
 937              	.LVL68:
 938 031a 0446     		mov	r4, r0
 939              	.LVL69:
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* Wait till PLL is ready */
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 940              		.loc 1 661 9 is_stmt 1 view .LVU297
 941              	.L80:
 942              		.loc 1 661 16 is_stmt 0 view .LVU298
 943 031c 484B     		ldr	r3, .L126
 944 031e 1B68     		ldr	r3, [r3]
 945              		.loc 1 661 15 view .LVU299
 946 0320 13F0007F 		tst	r3, #33554432
 947 0324 48D0     		beq	.L121
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 948              		.loc 1 663 11 is_stmt 1 view .LVU300
 949              		.loc 1 663 16 is_stmt 0 view .LVU301
 950 0326 FFF7FEFF 		bl	HAL_GetTick
 951              	.LVL70:
 952              		.loc 1 663 30 view .LVU302
 953 032a 001B     		subs	r0, r0, r4
 954              		.loc 1 663 14 view .LVU303
 955 032c 0228     		cmp	r0, #2
 956 032e F5D9     		bls	.L80
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****             return HAL_TIMEOUT;
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 32


 957              		.loc 1 665 20 view .LVU304
 958 0330 0320     		movs	r0, #3
 959 0332 75E0     		b	.L31
 960              	.LVL71:
 961              	.L119:
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 962              		.loc 1 583 7 is_stmt 1 view .LVU305
 963 0334 424A     		ldr	r2, .L126
 964 0336 136C     		ldr	r3, [r2, #64]
 965 0338 23F08053 		bic	r3, r3, #268435456
 966 033c 1364     		str	r3, [r2, #64]
 967 033e D9E7     		b	.L59
 968              	.LVL72:
 969              	.L120:
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 970              		.loc 1 597 9 view .LVU306
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 971              		.loc 1 598 9 view .LVU307
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 972              		.loc 1 599 9 view .LVU308
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 973              		.loc 1 600 9 view .LVU309
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #if defined (RCC_PLLCFGR_PLLR)
 974              		.loc 1 601 9 view .LVU310
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #endif
 975              		.loc 1 603 9 view .LVU311
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 976              		.loc 1 607 9 view .LVU312
 977 0340 3F4A     		ldr	r2, .L126
 978 0342 1368     		ldr	r3, [r2]
 979 0344 23F08073 		bic	r3, r3, #16777216
 980 0348 1360     		str	r3, [r2]
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 981              		.loc 1 610 9 view .LVU313
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 982              		.loc 1 610 21 is_stmt 0 view .LVU314
 983 034a FFF7FEFF 		bl	HAL_GetTick
 984              	.LVL73:
 985 034e 0546     		mov	r5, r0
 986              	.LVL74:
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 987              		.loc 1 613 9 is_stmt 1 view .LVU315
 988              	.L76:
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 989              		.loc 1 613 16 is_stmt 0 view .LVU316
 990 0350 3B4B     		ldr	r3, .L126
 991 0352 1B68     		ldr	r3, [r3]
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 992              		.loc 1 613 15 view .LVU317
 993 0354 13F0007F 		tst	r3, #33554432
 994 0358 06D0     		beq	.L122
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 995              		.loc 1 615 11 is_stmt 1 view .LVU318
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 996              		.loc 1 615 16 is_stmt 0 view .LVU319
 997 035a FFF7FEFF 		bl	HAL_GetTick
 998              	.LVL75:
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 33


 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 999              		.loc 1 615 30 view .LVU320
 1000 035e 401B     		subs	r0, r0, r5
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 1001              		.loc 1 615 14 view .LVU321
 1002 0360 0228     		cmp	r0, #2
 1003 0362 F5D9     		bls	.L76
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 1004              		.loc 1 617 20 view .LVU322
 1005 0364 0320     		movs	r0, #3
 1006 0366 5BE0     		b	.L31
 1007              	.L122:
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 1008              		.loc 1 623 9 is_stmt 1 view .LVU323
 1009 0368 E369     		ldr	r3, [r4, #28]
 1010 036a 226A     		ldr	r2, [r4, #32]
 1011 036c 1343     		orrs	r3, r3, r2
 1012 036e 626A     		ldr	r2, [r4, #36]
 1013 0370 43EA8213 		orr	r3, r3, r2, lsl #6
 1014 0374 A26A     		ldr	r2, [r4, #40]
 1015 0376 5208     		lsrs	r2, r2, #1
 1016 0378 013A     		subs	r2, r2, #1
 1017 037a 43EA0243 		orr	r3, r3, r2, lsl #16
 1018 037e E26A     		ldr	r2, [r4, #44]
 1019 0380 43EA0263 		orr	r3, r3, r2, lsl #24
 1020 0384 226B     		ldr	r2, [r4, #48]
 1021 0386 43EA0273 		orr	r3, r3, r2, lsl #28
 1022 038a 2D4A     		ldr	r2, .L126
 1023 038c 5360     		str	r3, [r2, #4]
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1024              		.loc 1 638 9 view .LVU324
 1025 038e 1368     		ldr	r3, [r2]
 1026 0390 43F08073 		orr	r3, r3, #16777216
 1027 0394 1360     		str	r3, [r2]
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1028              		.loc 1 641 9 view .LVU325
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1029              		.loc 1 641 21 is_stmt 0 view .LVU326
 1030 0396 FFF7FEFF 		bl	HAL_GetTick
 1031              	.LVL76:
 1032 039a 0446     		mov	r4, r0
 1033              	.LVL77:
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 1034              		.loc 1 644 9 is_stmt 1 view .LVU327
 1035              	.L78:
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 1036              		.loc 1 644 16 is_stmt 0 view .LVU328
 1037 039c 284B     		ldr	r3, .L126
 1038 039e 1B68     		ldr	r3, [r3]
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         {
 1039              		.loc 1 644 15 view .LVU329
 1040 03a0 13F0007F 		tst	r3, #33554432
 1041 03a4 06D1     		bne	.L123
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 1042              		.loc 1 646 11 is_stmt 1 view .LVU330
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 1043              		.loc 1 646 16 is_stmt 0 view .LVU331
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 34


 1044 03a6 FFF7FEFF 		bl	HAL_GetTick
 1045              	.LVL78:
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 1046              		.loc 1 646 30 view .LVU332
 1047 03aa 001B     		subs	r0, r0, r4
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           {
 1048              		.loc 1 646 14 view .LVU333
 1049 03ac 0228     		cmp	r0, #2
 1050 03ae F5D9     		bls	.L78
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 1051              		.loc 1 648 20 view .LVU334
 1052 03b0 0320     		movs	r0, #3
 1053 03b2 35E0     		b	.L31
 1054              	.L123:
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           }
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         }
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     else
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Do not return HAL_ERROR if request repeats the current configuration */
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       pll_config = RCC->PLLCFGR;
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #if defined (RCC_PLLCFGR_PLLR)
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PL
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) 
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PL
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PL
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #else
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PL
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) 
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PL
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #endif
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         return HAL_ERROR;
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   return HAL_OK;
 1055              		.loc 1 695 10 view .LVU335
 1056 03b4 0020     		movs	r0, #0
 1057 03b6 33E0     		b	.L31
 1058              	.L121:
 1059              		.loc 1 695 10 view .LVU336
 1060 03b8 0020     		movs	r0, #0
 1061 03ba 31E0     		b	.L31
 1062              	.LVL79:
 1063              	.L74:
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #if defined (RCC_PLLCFGR_PLLR)
 1064              		.loc 1 673 7 is_stmt 1 view .LVU337
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #if defined (RCC_PLLCFGR_PLLR)
 1065              		.loc 1 673 18 is_stmt 0 view .LVU338
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 35


 1066 03bc 204A     		ldr	r2, .L126
 1067 03be 5268     		ldr	r2, [r2, #4]
 1068              	.LVL80:
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1069              		.loc 1 675 7 is_stmt 1 view .LVU339
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1070              		.loc 1 675 10 is_stmt 0 view .LVU340
 1071 03c0 012B     		cmp	r3, #1
 1072 03c2 2FD0     		beq	.L99
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 1073              		.loc 1 676 12 discriminator 1 view .LVU341
 1074 03c4 02F48003 		and	r3, r2, #4194304
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 1075              		.loc 1 676 78 discriminator 1 view .LVU342
 1076 03c8 E169     		ldr	r1, [r4, #28]
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1077              		.loc 1 675 62 discriminator 1 view .LVU343
 1078 03ca 8B42     		cmp	r3, r1
 1079 03cc 2CD1     		bne	.L100
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PL
 1080              		.loc 1 677 12 view .LVU344
 1081 03ce 02F03F03 		and	r3, r2, #63
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PL
 1082              		.loc 1 677 76 view .LVU345
 1083 03d2 216A     		ldr	r1, [r4, #32]
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 1084              		.loc 1 676 90 view .LVU346
 1085 03d4 8B42     		cmp	r3, r1
 1086 03d6 29D1     		bne	.L101
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) 
 1087              		.loc 1 678 77 view .LVU347
 1088 03d8 616A     		ldr	r1, [r4, #36]
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PL
 1089              		.loc 1 677 83 view .LVU348
 1090 03da 47F6C073 		movw	r3, #32704
 1091 03de 1340     		ands	r3, r3, r2
 1092 03e0 B3EB811F 		cmp	r3, r1, lsl #6
 1093 03e4 24D1     		bne	.L102
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PL
 1094              		.loc 1 679 12 view .LVU349
 1095 03e6 02F44031 		and	r1, r2, #196608
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PL
 1096              		.loc 1 679 80 view .LVU350
 1097 03ea A36A     		ldr	r3, [r4, #40]
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PL
 1098              		.loc 1 679 87 view .LVU351
 1099 03ec 5B08     		lsrs	r3, r3, #1
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PL
 1100              		.loc 1 679 94 view .LVU352
 1101 03ee 013B     		subs	r3, r3, #1
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) 
 1102              		.loc 1 678 109 view .LVU353
 1103 03f0 B1EB034F 		cmp	r1, r3, lsl #16
 1104 03f4 1ED1     		bne	.L103
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PL
 1105              		.loc 1 680 12 view .LVU354
 1106 03f6 02F07063 		and	r3, r2, #251658240
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 36


 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PL
 1107              		.loc 1 680 77 view .LVU355
 1108 03fa E16A     		ldr	r1, [r4, #44]
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PL
 1109              		.loc 1 679 126 view .LVU356
 1110 03fc B3EB016F 		cmp	r3, r1, lsl #24
 1111 0400 1AD1     		bne	.L104
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #else
 1112              		.loc 1 681 12 view .LVU357
 1113 0402 02F0E042 		and	r2, r2, #1879048192
 1114              	.LVL81:
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #else
 1115              		.loc 1 681 77 view .LVU358
 1116 0406 236B     		ldr	r3, [r4, #48]
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****           (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PL
 1117              		.loc 1 680 109 view .LVU359
 1118 0408 B2EB037F 		cmp	r2, r3, lsl #28
 1119 040c 16D1     		bne	.L105
 1120              		.loc 1 695 10 view .LVU360
 1121 040e 0020     		movs	r0, #0
 1122 0410 06E0     		b	.L31
 1123              	.LVL82:
 1124              	.L82:
 1125              	.LCFI3:
 1126              		.cfi_def_cfa_offset 0
 1127              		.cfi_restore 4
 1128              		.cfi_restore 5
 1129              		.cfi_restore 6
 1130              		.cfi_restore 14
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 1131              		.loc 1 353 12 view .LVU361
 1132 0412 0120     		movs	r0, #1
 1133              	.LVL83:
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1134              		.loc 1 696 1 view .LVU362
 1135 0414 7047     		bx	lr
 1136              	.LVL84:
 1137              	.L112:
 1138              	.LCFI4:
 1139              		.cfi_def_cfa_offset 24
 1140              		.cfi_offset 4, -16
 1141              		.cfi_offset 5, -12
 1142              		.cfi_offset 6, -8
 1143              		.cfi_offset 14, -4
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1144              		.loc 1 370 16 view .LVU363
 1145 0416 0120     		movs	r0, #1
 1146              	.LVL85:
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1147              		.loc 1 370 16 view .LVU364
 1148 0418 02E0     		b	.L31
 1149              	.L86:
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1150              		.loc 1 423 16 view .LVU365
 1151 041a 0120     		movs	r0, #1
 1152 041c 00E0     		b	.L31
 1153              	.LVL86:
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 37


 1154              	.L95:
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1155              		.loc 1 695 10 view .LVU366
 1156 041e 0020     		movs	r0, #0
 1157              	.LVL87:
 1158              	.L31:
 1159              		.loc 1 696 1 view .LVU367
 1160 0420 02B0     		add	sp, sp, #8
 1161              	.LCFI5:
 1162              		.cfi_remember_state
 1163              		.cfi_def_cfa_offset 16
 1164              		@ sp needed
 1165 0422 70BD     		pop	{r4, r5, r6, pc}
 1166              	.LVL88:
 1167              	.L99:
 1168              	.LCFI6:
 1169              		.cfi_restore_state
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1170              		.loc 1 691 16 view .LVU368
 1171 0424 0120     		movs	r0, #1
 1172 0426 FBE7     		b	.L31
 1173              	.L100:
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1174              		.loc 1 691 16 view .LVU369
 1175 0428 0120     		movs	r0, #1
 1176 042a F9E7     		b	.L31
 1177              	.L101:
 1178 042c 0120     		movs	r0, #1
 1179 042e F7E7     		b	.L31
 1180              	.L102:
 1181 0430 0120     		movs	r0, #1
 1182 0432 F5E7     		b	.L31
 1183              	.L103:
 1184 0434 0120     		movs	r0, #1
 1185 0436 F3E7     		b	.L31
 1186              	.L104:
 1187 0438 0120     		movs	r0, #1
 1188 043a F1E7     		b	.L31
 1189              	.LVL89:
 1190              	.L105:
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1191              		.loc 1 691 16 view .LVU370
 1192 043c 0120     		movs	r0, #1
 1193 043e EFE7     		b	.L31
 1194              	.L127:
 1195              		.align	2
 1196              	.L126:
 1197 0440 00380240 		.word	1073887232
 1198              		.cfi_endproc
 1199              	.LFE142:
 1201              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1202              		.align	1
 1203              		.global	HAL_RCC_MCOConfig
 1204              		.syntax unified
 1205              		.thumb
 1206              		.thumb_func
 1207              		.fpu fpv5-d16
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 38


 1209              	HAL_RCC_MCOConfig:
 1210              	.LVL90:
 1211              	.LFB144:
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB busses clocks according to the specified
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  FLatency FLASH Latency, this parameter depend on device selected
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         You can use HAL_RCC_GetClockConfig() function to know which clock is
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         currently used as system clock source.
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   uint32_t tickstart = 0;
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Check Null pointer */
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if (RCC_ClkInitStruct == NULL)
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     return HAL_ERROR;
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Check the parameters */
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****      must be correctly programmed according to the frequency of the CPU clock
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****      (HCLK) and the supply voltage of the device. */
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Increasing the CPU frequency */
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if (FLatency > __HAL_FLASH_GET_LATENCY())
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if (__HAL_FLASH_GET_LATENCY() != FLatency)
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 39


 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       return HAL_ERROR;
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Set the highest APBx dividers in order to ensure that we do not go through
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Set the new HCLK clock divider */
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Check the HSE ready flag */
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         return HAL_ERROR;
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Check the PLL ready flag */
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         return HAL_ERROR;
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     else
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* Check the HSI ready flag */
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         return HAL_ERROR;
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 40


 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Get Start Tick*/
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         return HAL_TIMEOUT;
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if (FLatency < __HAL_FLASH_GET_LATENCY())
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     if (__HAL_FLASH_GET_LATENCY() != FLatency)
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       return HAL_ERROR;
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_C
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   HAL_InitTick(uwTickPrio);
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   return HAL_OK;
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @}
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 41


 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   @verbatim
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ===============================================================================
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   ===============================================================================
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     [..]
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     frequencies.
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** @endverbatim
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @{
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLLCLK: main PLL clock selected as MCO1 source
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK: main PLL clock selected as MCO2 source
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCOx prescaler.
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1: no division applied to MCOx clock
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCODIV_2: division by 2 applied to MCOx clock
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCODIV_3: division by 3 applied to MCOx clock
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCODIV_4: division by 4 applied to MCOx clock
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *            @arg RCC_MCODIV_5: division by 5 applied to MCOx clock
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 1212              		.loc 1 906 1 is_stmt 1 view -0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 32
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 1216              		.loc 1 906 1 is_stmt 0 view .LVU372
 1217 0000 70B5     		push	{r4, r5, r6, lr}
 1218              	.LCFI7:
 1219              		.cfi_def_cfa_offset 16
 1220              		.cfi_offset 4, -16
 1221              		.cfi_offset 5, -12
 1222              		.cfi_offset 6, -8
 1223              		.cfi_offset 14, -4
 1224 0002 88B0     		sub	sp, sp, #32
 1225              	.LCFI8:
 1226              		.cfi_def_cfa_offset 48
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 42


 1227 0004 0C46     		mov	r4, r1
 1228 0006 1646     		mov	r6, r2
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 1229              		.loc 1 907 3 is_stmt 1 view .LVU373
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Check the parameters */
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 1230              		.loc 1 909 3 view .LVU374
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 1231              		.loc 1 910 3 view .LVU375
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* RCC_MCO1 */
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if (RCC_MCOx == RCC_MCO1)
 1232              		.loc 1 912 3 view .LVU376
 1233              		.loc 1 912 6 is_stmt 0 view .LVU377
 1234 0008 F8B9     		cbnz	r0, .L129
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 1235              		.loc 1 914 5 is_stmt 1 view .LVU378
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* MCO1 Clock Enable */
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     MCO1_CLK_ENABLE();
 1236              		.loc 1 917 5 view .LVU379
 1237              	.LBB5:
 1238              		.loc 1 917 5 view .LVU380
 1239              		.loc 1 917 5 view .LVU381
 1240 000a 204D     		ldr	r5, .L132
 1241 000c 2B6B     		ldr	r3, [r5, #48]
 1242 000e 43F00103 		orr	r3, r3, #1
 1243 0012 2B63     		str	r3, [r5, #48]
 1244              		.loc 1 917 5 view .LVU382
 1245 0014 2B6B     		ldr	r3, [r5, #48]
 1246 0016 03F00103 		and	r3, r3, #1
 1247 001a 0193     		str	r3, [sp, #4]
 1248              		.loc 1 917 5 view .LVU383
 1249 001c 019B     		ldr	r3, [sp, #4]
 1250              	.LBE5:
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
 1251              		.loc 1 920 5 view .LVU384
 1252              		.loc 1 920 25 is_stmt 0 view .LVU385
 1253 001e 4FF48073 		mov	r3, #256
 1254 0022 0393     		str	r3, [sp, #12]
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1255              		.loc 1 921 5 is_stmt 1 view .LVU386
 1256              		.loc 1 921 26 is_stmt 0 view .LVU387
 1257 0024 0223     		movs	r3, #2
 1258 0026 0493     		str	r3, [sp, #16]
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
 1259              		.loc 1 922 5 is_stmt 1 view .LVU388
 1260              		.loc 1 922 27 is_stmt 0 view .LVU389
 1261 0028 0323     		movs	r3, #3
 1262 002a 0693     		str	r3, [sp, #24]
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1263              		.loc 1 923 5 is_stmt 1 view .LVU390
 1264              		.loc 1 923 26 is_stmt 0 view .LVU391
 1265 002c 0023     		movs	r3, #0
 1266 002e 0593     		str	r3, [sp, #20]
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 43


 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1267              		.loc 1 924 5 is_stmt 1 view .LVU392
 1268              		.loc 1 924 31 is_stmt 0 view .LVU393
 1269 0030 0793     		str	r3, [sp, #28]
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1270              		.loc 1 925 5 is_stmt 1 view .LVU394
 1271 0032 03A9     		add	r1, sp, #12
 1272              	.LVL91:
 1273              		.loc 1 925 5 is_stmt 0 view .LVU395
 1274 0034 1648     		ldr	r0, .L132+4
 1275              	.LVL92:
 1276              		.loc 1 925 5 view .LVU396
 1277 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 1278              	.LVL93:
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[2:0] bits then Select MCO1 clock source and prescaler */
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 1279              		.loc 1 928 5 is_stmt 1 view .LVU397
 1280 003a AB68     		ldr	r3, [r5, #8]
 1281 003c 23F0EC63 		bic	r3, r3, #123731968
 1282 0040 3443     		orrs	r4, r4, r6
 1283              	.LVL94:
 1284              		.loc 1 928 5 is_stmt 0 view .LVU398
 1285 0042 1C43     		orrs	r4, r4, r3
 1286 0044 AC60     		str	r4, [r5, #8]
 1287              	.L128:
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* MCO2 Clock Enable */
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     MCO2_CLK_ENABLE();
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[2:0] bits then Select MCO2 clock source and prescaler */
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 3)));
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1288              		.loc 1 948 1 view .LVU399
 1289 0046 08B0     		add	sp, sp, #32
 1290              	.LCFI9:
 1291              		.cfi_remember_state
 1292              		.cfi_def_cfa_offset 16
 1293              		@ sp needed
 1294 0048 70BD     		pop	{r4, r5, r6, pc}
 1295              	.LVL95:
 1296              	.L129:
 1297              	.LCFI10:
 1298              		.cfi_restore_state
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 44


 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1299              		.loc 1 932 5 is_stmt 1 view .LVU400
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1300              		.loc 1 935 5 view .LVU401
 1301              	.LBB6:
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1302              		.loc 1 935 5 view .LVU402
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1303              		.loc 1 935 5 view .LVU403
 1304 004a 104D     		ldr	r5, .L132
 1305 004c 2B6B     		ldr	r3, [r5, #48]
 1306 004e 43F00403 		orr	r3, r3, #4
 1307 0052 2B63     		str	r3, [r5, #48]
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1308              		.loc 1 935 5 view .LVU404
 1309 0054 2B6B     		ldr	r3, [r5, #48]
 1310 0056 03F00403 		and	r3, r3, #4
 1311 005a 0293     		str	r3, [sp, #8]
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1312              		.loc 1 935 5 view .LVU405
 1313 005c 029B     		ldr	r3, [sp, #8]
 1314              	.LBE6:
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1315              		.loc 1 938 5 view .LVU406
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1316              		.loc 1 938 25 is_stmt 0 view .LVU407
 1317 005e 4FF40073 		mov	r3, #512
 1318 0062 0393     		str	r3, [sp, #12]
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
 1319              		.loc 1 939 5 is_stmt 1 view .LVU408
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
 1320              		.loc 1 939 26 is_stmt 0 view .LVU409
 1321 0064 0223     		movs	r3, #2
 1322 0066 0493     		str	r3, [sp, #16]
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1323              		.loc 1 940 5 is_stmt 1 view .LVU410
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1324              		.loc 1 940 27 is_stmt 0 view .LVU411
 1325 0068 0323     		movs	r3, #3
 1326 006a 0693     		str	r3, [sp, #24]
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1327              		.loc 1 941 5 is_stmt 1 view .LVU412
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1328              		.loc 1 941 26 is_stmt 0 view .LVU413
 1329 006c 0023     		movs	r3, #0
 1330 006e 0593     		str	r3, [sp, #20]
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1331              		.loc 1 942 5 is_stmt 1 view .LVU414
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1332              		.loc 1 942 31 is_stmt 0 view .LVU415
 1333 0070 0793     		str	r3, [sp, #28]
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1334              		.loc 1 943 5 is_stmt 1 view .LVU416
 1335 0072 03A9     		add	r1, sp, #12
 1336              	.LVL96:
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1337              		.loc 1 943 5 is_stmt 0 view .LVU417
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 45


 1338 0074 0748     		ldr	r0, .L132+8
 1339              	.LVL97:
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1340              		.loc 1 943 5 view .LVU418
 1341 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 1342              	.LVL98:
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 1343              		.loc 1 946 5 is_stmt 1 view .LVU419
 1344 007a AB68     		ldr	r3, [r5, #8]
 1345 007c 23F07843 		bic	r3, r3, #-134217728
 1346 0080 44EAC604 		orr	r4, r4, r6, lsl #3
 1347              	.LVL99:
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 1348              		.loc 1 946 5 is_stmt 0 view .LVU420
 1349 0084 1C43     		orrs	r4, r4, r3
 1350 0086 AC60     		str	r4, [r5, #8]
 1351              		.loc 1 948 1 view .LVU421
 1352 0088 DDE7     		b	.L128
 1353              	.L133:
 1354 008a 00BF     		.align	2
 1355              	.L132:
 1356 008c 00380240 		.word	1073887232
 1357 0090 00000240 		.word	1073872896
 1358 0094 00080240 		.word	1073874944
 1359              		.cfi_endproc
 1360              	.LFE144:
 1362              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1363              		.align	1
 1364              		.global	HAL_RCC_EnableCSS
 1365              		.syntax unified
 1366              		.thumb
 1367              		.thumb_func
 1368              		.fpu fpv5-d16
 1370              	HAL_RCC_EnableCSS:
 1371              	.LFB145:
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         the Cortex-M7 NMI (Non-Maskable Interrupt) exception vector.
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 1372              		.loc 1 960 1 is_stmt 1 view -0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 0
 1375              		@ frame_needed = 0, uses_anonymous_args = 0
 1376              		@ link register save eliminated.
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON);
 1377              		.loc 1 961 3 view .LVU423
 1378 0000 024A     		ldr	r2, .L135
 1379 0002 1368     		ldr	r3, [r2]
 1380 0004 43F40023 		orr	r3, r3, #524288
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 46


 1381 0008 1360     		str	r3, [r2]
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1382              		.loc 1 962 1 is_stmt 0 view .LVU424
 1383 000a 7047     		bx	lr
 1384              	.L136:
 1385              		.align	2
 1386              	.L135:
 1387 000c 00380240 		.word	1073887232
 1388              		.cfi_endproc
 1389              	.LFE145:
 1391              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1392              		.align	1
 1393              		.global	HAL_RCC_DisableCSS
 1394              		.syntax unified
 1395              		.thumb
 1396              		.thumb_func
 1397              		.fpu fpv5-d16
 1399              	HAL_RCC_DisableCSS:
 1400              	.LFB146:
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 1401              		.loc 1 969 1 is_stmt 1 view -0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 0
 1404              		@ frame_needed = 0, uses_anonymous_args = 0
 1405              		@ link register save eliminated.
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_CSSON);
 1406              		.loc 1 970 3 view .LVU426
 1407 0000 024A     		ldr	r2, .L138
 1408 0002 1368     		ldr	r3, [r2]
 1409 0004 23F40023 		bic	r3, r3, #524288
 1410 0008 1360     		str	r3, [r2]
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1411              		.loc 1 971 1 is_stmt 0 view .LVU427
 1412 000a 7047     		bx	lr
 1413              	.L139:
 1414              		.align	2
 1415              	.L138:
 1416 000c 00380240 		.word	1073887232
 1417              		.cfi_endproc
 1418              	.LFE146:
 1420              		.global	__aeabi_uldivmod
 1421              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1422              		.align	1
 1423              		.global	HAL_RCC_GetSysClockFreq
 1424              		.syntax unified
 1425              		.thumb
 1426              		.thumb_func
 1427              		.fpu fpv5-d16
 1429              	HAL_RCC_GetSysClockFreq:
 1430              	.LFB147:
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 47


 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         constant and the selected clock source:
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**)
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f7xx_hal_conf.h file (default value
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *               in voltage and temperature.
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f7xx_hal_conf.h file (default value
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *                have wrong result.
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         value for HSE crystal.
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval SYSCLK frequency
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 1431              		.loc 1 1004 1 is_stmt 1 view -0
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 0
 1434              		@ frame_needed = 0, uses_anonymous_args = 0
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   uint32_t pllm = 0, pllvco = 0, pllp = 0;
 1435              		.loc 1 1005 3 view .LVU429
 1436              	.LVL100:
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   uint32_t sysclockfreq = 0;
 1437              		.loc 1 1006 3 view .LVU430
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 1438              		.loc 1 1009 3 view .LVU431
 1439              		.loc 1 1009 14 is_stmt 0 view .LVU432
 1440 0000 2F4B     		ldr	r3, .L150
 1441 0002 9B68     		ldr	r3, [r3, #8]
 1442              		.loc 1 1009 21 view .LVU433
 1443 0004 03F00C03 		and	r3, r3, #12
 1444              		.loc 1 1009 3 view .LVU434
 1445 0008 082B     		cmp	r3, #8
 1446 000a 01D0     		beq	.L149
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 48


 1447              		.loc 1 1013 20 view .LVU435
 1448 000c 2D48     		ldr	r0, .L150+4
 1449              	.LVL101:
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       break;
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock  source */
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       break;
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       SYSCLK = PLL_VCO / PLLP */
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* HSE used as PLL clock source */
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) 
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       else
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         /* HSI used as PLL clock source */
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****         pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) 
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       sysclockfreq = pllvco / pllp;
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       break;
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     default:
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       break;
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   return sysclockfreq;
 1450              		.loc 1 1047 3 is_stmt 1 view .LVU436
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1451              		.loc 1 1048 1 is_stmt 0 view .LVU437
 1452 000e 7047     		bx	lr
 1453              	.LVL102:
 1454              	.L149:
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   uint32_t pllm = 0, pllvco = 0, pllp = 0;
 1455              		.loc 1 1004 1 view .LVU438
 1456 0010 70B5     		push	{r4, r5, r6, lr}
 1457              	.LCFI11:
 1458              		.cfi_def_cfa_offset 16
 1459              		.cfi_offset 4, -16
 1460              		.cfi_offset 5, -12
 1461              		.cfi_offset 6, -8
 1462              		.cfi_offset 14, -4
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 1463              		.loc 1 1025 7 is_stmt 1 view .LVU439
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 1464              		.loc 1 1025 17 is_stmt 0 view .LVU440
 1465 0012 2B4B     		ldr	r3, .L150
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 49


 1466 0014 5A68     		ldr	r2, [r3, #4]
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 1467              		.loc 1 1025 12 view .LVU441
 1468 0016 02F03F02 		and	r2, r2, #63
 1469              	.LVL103:
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 1470              		.loc 1 1026 7 is_stmt 1 view .LVU442
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 1471              		.loc 1 1026 11 is_stmt 0 view .LVU443
 1472 001a 5B68     		ldr	r3, [r3, #4]
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 1473              		.loc 1 1026 10 view .LVU444
 1474 001c 13F4800F 		tst	r3, #4194304
 1475 0020 2AD0     		beq	.L142
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1476              		.loc 1 1029 9 is_stmt 1 view .LVU445
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1477              		.loc 1 1029 70 is_stmt 0 view .LVU446
 1478 0022 274B     		ldr	r3, .L150
 1479 0024 5868     		ldr	r0, [r3, #4]
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1480              		.loc 1 1029 55 view .LVU447
 1481 0026 C0F38810 		ubfx	r0, r0, #6, #9
 1482 002a 0546     		mov	r5, r0
 1483 002c 0026     		movs	r6, #0
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1484              		.loc 1 1029 52 view .LVU448
 1485 002e 4301     		lsls	r3, r0, #5
 1486 0030 1B1A     		subs	r3, r3, r0
 1487 0032 66EB0604 		sbc	r4, r6, r6
 1488 0036 A101     		lsls	r1, r4, #6
 1489 0038 41EA9361 		orr	r1, r1, r3, lsr #26
 1490 003c 9801     		lsls	r0, r3, #6
 1491 003e C01A     		subs	r0, r0, r3
 1492 0040 61EB0401 		sbc	r1, r1, r4
 1493 0044 CB00     		lsls	r3, r1, #3
 1494 0046 43EA5073 		orr	r3, r3, r0, lsr #29
 1495 004a C400     		lsls	r4, r0, #3
 1496 004c 1946     		mov	r1, r3
 1497 004e 6019     		adds	r0, r4, r5
 1498 0050 46EB0101 		adc	r1, r6, r1
 1499 0054 8B02     		lsls	r3, r1, #10
 1500 0056 43EA9053 		orr	r3, r3, r0, lsr #22
 1501 005a 8402     		lsls	r4, r0, #10
 1502 005c 2046     		mov	r0, r4
 1503 005e 1946     		mov	r1, r3
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1504              		.loc 1 1029 128 view .LVU449
 1505 0060 3346     		mov	r3, r6
 1506 0062 FFF7FEFF 		bl	__aeabi_uldivmod
 1507              	.LVL104:
 1508              	.L143:
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1509              		.loc 1 1036 7 is_stmt 1 view .LVU450
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1510              		.loc 1 1036 21 is_stmt 0 view .LVU451
 1511 0066 164B     		ldr	r3, .L150
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 50


 1512 0068 5B68     		ldr	r3, [r3, #4]
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1513              		.loc 1 1036 51 view .LVU452
 1514 006a C3F30143 		ubfx	r3, r3, #16, #2
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1515              		.loc 1 1036 81 view .LVU453
 1516 006e 0133     		adds	r3, r3, #1
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1517              		.loc 1 1036 12 view .LVU454
 1518 0070 5B00     		lsls	r3, r3, #1
 1519              	.LVL105:
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       break;
 1520              		.loc 1 1038 7 is_stmt 1 view .LVU455
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       break;
 1521              		.loc 1 1038 20 is_stmt 0 view .LVU456
 1522 0072 B0FBF3F0 		udiv	r0, r0, r3
 1523              	.LVL106:
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 1524              		.loc 1 1039 7 is_stmt 1 view .LVU457
 1525              		.loc 1 1048 1 is_stmt 0 view .LVU458
 1526 0076 70BD     		pop	{r4, r5, r6, pc}
 1527              	.LVL107:
 1528              	.L142:
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1529              		.loc 1 1034 9 is_stmt 1 view .LVU459
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1530              		.loc 1 1034 70 is_stmt 0 view .LVU460
 1531 0078 114B     		ldr	r3, .L150
 1532 007a 5868     		ldr	r0, [r3, #4]
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1533              		.loc 1 1034 55 view .LVU461
 1534 007c C0F38810 		ubfx	r0, r0, #6, #9
 1535 0080 0546     		mov	r5, r0
 1536 0082 0026     		movs	r6, #0
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1537              		.loc 1 1034 52 view .LVU462
 1538 0084 4301     		lsls	r3, r0, #5
 1539 0086 1B1A     		subs	r3, r3, r0
 1540 0088 66EB0604 		sbc	r4, r6, r6
 1541 008c A101     		lsls	r1, r4, #6
 1542 008e 41EA9361 		orr	r1, r1, r3, lsr #26
 1543 0092 9801     		lsls	r0, r3, #6
 1544 0094 C01A     		subs	r0, r0, r3
 1545 0096 61EB0401 		sbc	r1, r1, r4
 1546 009a CB00     		lsls	r3, r1, #3
 1547 009c 43EA5073 		orr	r3, r3, r0, lsr #29
 1548 00a0 C400     		lsls	r4, r0, #3
 1549 00a2 1946     		mov	r1, r3
 1550 00a4 6019     		adds	r0, r4, r5
 1551 00a6 46EB0101 		adc	r1, r6, r1
 1552 00aa 8B02     		lsls	r3, r1, #10
 1553 00ac 43EA9053 		orr	r3, r3, r0, lsr #22
 1554 00b0 8402     		lsls	r4, r0, #10
 1555 00b2 2046     		mov	r0, r4
 1556 00b4 1946     		mov	r1, r3
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1557              		.loc 1 1034 128 view .LVU463
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 51


 1558 00b6 3346     		mov	r3, r6
 1559 00b8 FFF7FEFF 		bl	__aeabi_uldivmod
 1560              	.LVL108:
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1561              		.loc 1 1034 128 view .LVU464
 1562 00bc D3E7     		b	.L143
 1563              	.L151:
 1564 00be 00BF     		.align	2
 1565              	.L150:
 1566 00c0 00380240 		.word	1073887232
 1567 00c4 0024F400 		.word	16000000
 1568              		.cfi_endproc
 1569              	.LFE147:
 1571              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1572              		.align	1
 1573              		.global	HAL_RCC_ClockConfig
 1574              		.syntax unified
 1575              		.thumb
 1576              		.thumb_func
 1577              		.fpu fpv5-d16
 1579              	HAL_RCC_ClockConfig:
 1580              	.LVL109:
 1581              	.LFB143:
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   uint32_t tickstart = 0;
 1582              		.loc 1 725 1 is_stmt 1 view -0
 1583              		.cfi_startproc
 1584              		@ args = 0, pretend = 0, frame = 0
 1585              		@ frame_needed = 0, uses_anonymous_args = 0
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1586              		.loc 1 726 3 view .LVU466
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1587              		.loc 1 729 3 view .LVU467
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1588              		.loc 1 729 6 is_stmt 0 view .LVU468
 1589 0000 0028     		cmp	r0, #0
 1590 0002 00F0A080 		beq	.L167
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   uint32_t tickstart = 0;
 1591              		.loc 1 725 1 view .LVU469
 1592 0006 70B5     		push	{r4, r5, r6, lr}
 1593              	.LCFI12:
 1594              		.cfi_def_cfa_offset 16
 1595              		.cfi_offset 4, -16
 1596              		.cfi_offset 5, -12
 1597              		.cfi_offset 6, -8
 1598              		.cfi_offset 14, -4
 1599 0008 0446     		mov	r4, r0
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 1600              		.loc 1 735 3 is_stmt 1 view .LVU470
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1601              		.loc 1 736 3 view .LVU471
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1602              		.loc 1 743 3 view .LVU472
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1603              		.loc 1 743 18 is_stmt 0 view .LVU473
 1604 000a 534B     		ldr	r3, .L180
 1605 000c 1B68     		ldr	r3, [r3]
 1606 000e 03F00F03 		and	r3, r3, #15
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 52


 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1607              		.loc 1 743 6 view .LVU474
 1608 0012 8B42     		cmp	r3, r1
 1609 0014 0BD2     		bcs	.L154
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1610              		.loc 1 746 5 is_stmt 1 view .LVU475
 1611 0016 504A     		ldr	r2, .L180
 1612 0018 1368     		ldr	r3, [r2]
 1613 001a 23F00F03 		bic	r3, r3, #15
 1614 001e 0B43     		orrs	r3, r3, r1
 1615 0020 1360     		str	r3, [r2]
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1616              		.loc 1 750 5 view .LVU476
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1617              		.loc 1 750 9 is_stmt 0 view .LVU477
 1618 0022 1368     		ldr	r3, [r2]
 1619 0024 03F00F03 		and	r3, r3, #15
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1620              		.loc 1 750 8 view .LVU478
 1621 0028 8B42     		cmp	r3, r1
 1622 002a 40F08E80 		bne	.L168
 1623              	.L154:
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1624              		.loc 1 757 3 is_stmt 1 view .LVU479
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1625              		.loc 1 757 26 is_stmt 0 view .LVU480
 1626 002e 2368     		ldr	r3, [r4]
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1627              		.loc 1 757 6 view .LVU481
 1628 0030 13F0020F 		tst	r3, #2
 1629 0034 17D0     		beq	.L155
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1630              		.loc 1 761 5 is_stmt 1 view .LVU482
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1631              		.loc 1 761 8 is_stmt 0 view .LVU483
 1632 0036 13F0040F 		tst	r3, #4
 1633 003a 04D0     		beq	.L156
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 1634              		.loc 1 763 7 is_stmt 1 view .LVU484
 1635 003c 474A     		ldr	r2, .L180+4
 1636 003e 9368     		ldr	r3, [r2, #8]
 1637 0040 43F4E053 		orr	r3, r3, #7168
 1638 0044 9360     		str	r3, [r2, #8]
 1639              	.L156:
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1640              		.loc 1 766 5 view .LVU485
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1641              		.loc 1 766 28 is_stmt 0 view .LVU486
 1642 0046 2368     		ldr	r3, [r4]
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1643              		.loc 1 766 8 view .LVU487
 1644 0048 13F0080F 		tst	r3, #8
 1645 004c 04D0     		beq	.L157
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 1646              		.loc 1 768 7 is_stmt 1 view .LVU488
 1647 004e 434A     		ldr	r2, .L180+4
 1648 0050 9368     		ldr	r3, [r2, #8]
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 53


 1649 0052 43F46043 		orr	r3, r3, #57344
 1650 0056 9360     		str	r3, [r2, #8]
 1651              	.L157:
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1652              		.loc 1 772 5 view .LVU489
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 1653              		.loc 1 773 5 view .LVU490
 1654 0058 404A     		ldr	r2, .L180+4
 1655 005a 9368     		ldr	r3, [r2, #8]
 1656 005c 23F0F003 		bic	r3, r3, #240
 1657 0060 A068     		ldr	r0, [r4, #8]
 1658              	.LVL110:
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 1659              		.loc 1 773 5 is_stmt 0 view .LVU491
 1660 0062 0343     		orrs	r3, r3, r0
 1661 0064 9360     		str	r3, [r2, #8]
 1662              	.L155:
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 1663              		.loc 1 773 5 view .LVU492
 1664 0066 0D46     		mov	r5, r1
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1665              		.loc 1 777 3 is_stmt 1 view .LVU493
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1666              		.loc 1 777 26 is_stmt 0 view .LVU494
 1667 0068 2368     		ldr	r3, [r4]
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1668              		.loc 1 777 6 view .LVU495
 1669 006a 13F0010F 		tst	r3, #1
 1670 006e 31D0     		beq	.L158
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1671              		.loc 1 779 5 is_stmt 1 view .LVU496
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1672              		.loc 1 782 5 view .LVU497
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1673              		.loc 1 782 26 is_stmt 0 view .LVU498
 1674 0070 6368     		ldr	r3, [r4, #4]
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1675              		.loc 1 782 8 view .LVU499
 1676 0072 012B     		cmp	r3, #1
 1677 0074 20D0     		beq	.L178
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1678              		.loc 1 791 10 is_stmt 1 view .LVU500
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1679              		.loc 1 791 13 is_stmt 0 view .LVU501
 1680 0076 022B     		cmp	r3, #2
 1681 0078 25D0     		beq	.L179
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 1682              		.loc 1 803 7 is_stmt 1 view .LVU502
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 1683              		.loc 1 803 11 is_stmt 0 view .LVU503
 1684 007a 384A     		ldr	r2, .L180+4
 1685 007c 1268     		ldr	r2, [r2]
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 1686              		.loc 1 803 10 view .LVU504
 1687 007e 12F0020F 		tst	r2, #2
 1688 0082 64D0     		beq	.L171
 1689              	.L160:
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 54


 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1690              		.loc 1 809 5 is_stmt 1 view .LVU505
 1691 0084 3549     		ldr	r1, .L180+4
 1692              	.LVL111:
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1693              		.loc 1 809 5 is_stmt 0 view .LVU506
 1694 0086 8A68     		ldr	r2, [r1, #8]
 1695 0088 22F00302 		bic	r2, r2, #3
 1696 008c 1343     		orrs	r3, r3, r2
 1697 008e 8B60     		str	r3, [r1, #8]
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1698              		.loc 1 812 5 is_stmt 1 view .LVU507
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1699              		.loc 1 812 17 is_stmt 0 view .LVU508
 1700 0090 FFF7FEFF 		bl	HAL_GetTick
 1701              	.LVL112:
 1702 0094 0646     		mov	r6, r0
 1703              	.LVL113:
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1704              		.loc 1 814 5 is_stmt 1 view .LVU509
 1705              	.L162:
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1706              		.loc 1 814 12 is_stmt 0 view .LVU510
 1707 0096 314B     		ldr	r3, .L180+4
 1708 0098 9B68     		ldr	r3, [r3, #8]
 1709 009a 03F00C03 		and	r3, r3, #12
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1710              		.loc 1 814 63 view .LVU511
 1711 009e 6268     		ldr	r2, [r4, #4]
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1712              		.loc 1 814 11 view .LVU512
 1713 00a0 B3EB820F 		cmp	r3, r2, lsl #2
 1714 00a4 16D0     		beq	.L158
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 1715              		.loc 1 816 7 is_stmt 1 view .LVU513
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 1716              		.loc 1 816 12 is_stmt 0 view .LVU514
 1717 00a6 FFF7FEFF 		bl	HAL_GetTick
 1718              	.LVL114:
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 1719              		.loc 1 816 26 view .LVU515
 1720 00aa 801B     		subs	r0, r0, r6
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 1721              		.loc 1 816 10 view .LVU516
 1722 00ac 41F28833 		movw	r3, #5000
 1723 00b0 9842     		cmp	r0, r3
 1724 00b2 F0D9     		bls	.L162
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1725              		.loc 1 818 16 view .LVU517
 1726 00b4 0320     		movs	r0, #3
 1727 00b6 45E0     		b	.L153
 1728              	.LVL115:
 1729              	.L178:
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 1730              		.loc 1 785 7 is_stmt 1 view .LVU518
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 1731              		.loc 1 785 11 is_stmt 0 view .LVU519
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 55


 1732 00b8 284A     		ldr	r2, .L180+4
 1733 00ba 1268     		ldr	r2, [r2]
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 1734              		.loc 1 785 10 view .LVU520
 1735 00bc 12F4003F 		tst	r2, #131072
 1736 00c0 E0D1     		bne	.L160
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1737              		.loc 1 787 16 view .LVU521
 1738 00c2 0120     		movs	r0, #1
 1739 00c4 3EE0     		b	.L153
 1740              	.L179:
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 1741              		.loc 1 794 7 is_stmt 1 view .LVU522
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 1742              		.loc 1 794 11 is_stmt 0 view .LVU523
 1743 00c6 254A     		ldr	r2, .L180+4
 1744 00c8 1268     		ldr	r2, [r2]
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       {
 1745              		.loc 1 794 10 view .LVU524
 1746 00ca 12F0007F 		tst	r2, #33554432
 1747 00ce D9D1     		bne	.L160
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1748              		.loc 1 796 16 view .LVU525
 1749 00d0 0120     		movs	r0, #1
 1750 00d2 37E0     		b	.L153
 1751              	.LVL116:
 1752              	.L158:
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1753              		.loc 1 824 3 is_stmt 1 view .LVU526
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1754              		.loc 1 824 18 is_stmt 0 view .LVU527
 1755 00d4 204B     		ldr	r3, .L180
 1756 00d6 1B68     		ldr	r3, [r3]
 1757 00d8 03F00F03 		and	r3, r3, #15
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1758              		.loc 1 824 6 view .LVU528
 1759 00dc AB42     		cmp	r3, r5
 1760 00de 0AD9     		bls	.L164
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1761              		.loc 1 827 5 is_stmt 1 view .LVU529
 1762 00e0 1D4A     		ldr	r2, .L180
 1763 00e2 1368     		ldr	r3, [r2]
 1764 00e4 23F00F03 		bic	r3, r3, #15
 1765 00e8 2B43     		orrs	r3, r3, r5
 1766 00ea 1360     		str	r3, [r2]
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1767              		.loc 1 831 5 view .LVU530
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1768              		.loc 1 831 9 is_stmt 0 view .LVU531
 1769 00ec 1368     		ldr	r3, [r2]
 1770 00ee 03F00F03 		and	r3, r3, #15
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     {
 1771              		.loc 1 831 8 view .LVU532
 1772 00f2 AB42     		cmp	r3, r5
 1773 00f4 2DD1     		bne	.L173
 1774              	.L164:
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 56


 1775              		.loc 1 838 3 is_stmt 1 view .LVU533
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1776              		.loc 1 838 26 is_stmt 0 view .LVU534
 1777 00f6 2368     		ldr	r3, [r4]
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1778              		.loc 1 838 6 view .LVU535
 1779 00f8 13F0040F 		tst	r3, #4
 1780 00fc 06D0     		beq	.L165
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1781              		.loc 1 840 5 is_stmt 1 view .LVU536
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 1782              		.loc 1 841 5 view .LVU537
 1783 00fe 174A     		ldr	r2, .L180+4
 1784 0100 9368     		ldr	r3, [r2, #8]
 1785 0102 23F4E053 		bic	r3, r3, #7168
 1786 0106 E168     		ldr	r1, [r4, #12]
 1787 0108 0B43     		orrs	r3, r3, r1
 1788 010a 9360     		str	r3, [r2, #8]
 1789              	.L165:
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1790              		.loc 1 845 3 view .LVU538
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1791              		.loc 1 845 26 is_stmt 0 view .LVU539
 1792 010c 2368     		ldr	r3, [r4]
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 1793              		.loc 1 845 6 view .LVU540
 1794 010e 13F0080F 		tst	r3, #8
 1795 0112 07D0     		beq	.L166
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 1796              		.loc 1 847 5 is_stmt 1 view .LVU541
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 1797              		.loc 1 848 5 view .LVU542
 1798 0114 114A     		ldr	r2, .L180+4
 1799 0116 9368     		ldr	r3, [r2, #8]
 1800 0118 23F46043 		bic	r3, r3, #57344
 1801 011c 2169     		ldr	r1, [r4, #16]
 1802 011e 43EAC103 		orr	r3, r3, r1, lsl #3
 1803 0122 9360     		str	r3, [r2, #8]
 1804              	.L166:
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1805              		.loc 1 852 3 view .LVU543
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1806              		.loc 1 852 21 is_stmt 0 view .LVU544
 1807 0124 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1808              	.LVL117:
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1809              		.loc 1 852 68 view .LVU545
 1810 0128 0C4B     		ldr	r3, .L180+4
 1811 012a 9B68     		ldr	r3, [r3, #8]
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1812              		.loc 1 852 92 view .LVU546
 1813 012c C3F30313 		ubfx	r3, r3, #4, #4
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1814              		.loc 1 852 63 view .LVU547
 1815 0130 0B4A     		ldr	r2, .L180+8
 1816 0132 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 57


 1817              		.loc 1 852 47 view .LVU548
 1818 0134 D840     		lsrs	r0, r0, r3
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1819              		.loc 1 852 19 view .LVU549
 1820 0136 0B4B     		ldr	r3, .L180+12
 1821 0138 1860     		str	r0, [r3]
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1822              		.loc 1 855 3 is_stmt 1 view .LVU550
 1823 013a 0B4B     		ldr	r3, .L180+16
 1824 013c 1868     		ldr	r0, [r3]
 1825 013e FFF7FEFF 		bl	HAL_InitTick
 1826              	.LVL118:
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1827              		.loc 1 857 3 view .LVU551
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1828              		.loc 1 857 10 is_stmt 0 view .LVU552
 1829 0142 0020     		movs	r0, #0
 1830              	.LVL119:
 1831              	.L153:
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1832              		.loc 1 858 1 view .LVU553
 1833 0144 70BD     		pop	{r4, r5, r6, pc}
 1834              	.LVL120:
 1835              	.L167:
 1836              	.LCFI13:
 1837              		.cfi_def_cfa_offset 0
 1838              		.cfi_restore 4
 1839              		.cfi_restore 5
 1840              		.cfi_restore 6
 1841              		.cfi_restore 14
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 1842              		.loc 1 731 12 view .LVU554
 1843 0146 0120     		movs	r0, #1
 1844              	.LVL121:
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 1845              		.loc 1 858 1 view .LVU555
 1846 0148 7047     		bx	lr
 1847              	.LVL122:
 1848              	.L168:
 1849              	.LCFI14:
 1850              		.cfi_def_cfa_offset 16
 1851              		.cfi_offset 4, -16
 1852              		.cfi_offset 5, -12
 1853              		.cfi_offset 6, -8
 1854              		.cfi_offset 14, -4
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 1855              		.loc 1 752 14 view .LVU556
 1856 014a 0120     		movs	r0, #1
 1857              	.LVL123:
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 1858              		.loc 1 752 14 view .LVU557
 1859 014c FAE7     		b	.L153
 1860              	.L171:
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****       }
 1861              		.loc 1 805 16 view .LVU558
 1862 014e 0120     		movs	r0, #1
 1863 0150 F8E7     		b	.L153
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 58


 1864              	.LVL124:
 1865              	.L173:
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     }
 1866              		.loc 1 833 14 view .LVU559
 1867 0152 0120     		movs	r0, #1
 1868 0154 F6E7     		b	.L153
 1869              	.L181:
 1870 0156 00BF     		.align	2
 1871              	.L180:
 1872 0158 003C0240 		.word	1073888256
 1873 015c 00380240 		.word	1073887232
 1874 0160 00000000 		.word	AHBPrescTable
 1875 0164 00000000 		.word	SystemCoreClock
 1876 0168 00000000 		.word	uwTickPrio
 1877              		.cfi_endproc
 1878              	.LFE143:
 1880              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1881              		.align	1
 1882              		.global	HAL_RCC_GetHCLKFreq
 1883              		.syntax unified
 1884              		.thumb
 1885              		.thumb_func
 1886              		.fpu fpv5-d16
 1888              	HAL_RCC_GetHCLKFreq:
 1889              	.LFB148:
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval HCLK frequency
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 1890              		.loc 1 1058 1 is_stmt 1 view -0
 1891              		.cfi_startproc
 1892              		@ args = 0, pretend = 0, frame = 0
 1893              		@ frame_needed = 0, uses_anonymous_args = 0
 1894              		@ link register save eliminated.
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   return SystemCoreClock;
 1895              		.loc 1 1059 3 view .LVU561
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1896              		.loc 1 1060 1 is_stmt 0 view .LVU562
 1897 0000 014B     		ldr	r3, .L183
 1898 0002 1868     		ldr	r0, [r3]
 1899 0004 7047     		bx	lr
 1900              	.L184:
 1901 0006 00BF     		.align	2
 1902              	.L183:
 1903 0008 00000000 		.word	SystemCoreClock
 1904              		.cfi_endproc
 1905              	.LFE148:
 1907              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1908              		.align	1
 1909              		.global	HAL_RCC_GetPCLK1Freq
 1910              		.syntax unified
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 59


 1911              		.thumb
 1912              		.thumb_func
 1913              		.fpu fpv5-d16
 1915              	HAL_RCC_GetPCLK1Freq:
 1916              	.LFB149:
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval PCLK1 frequency
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 1917              		.loc 1 1069 1 is_stmt 1 view -0
 1918              		.cfi_startproc
 1919              		@ args = 0, pretend = 0, frame = 0
 1920              		@ frame_needed = 0, uses_anonymous_args = 0
 1921 0000 08B5     		push	{r3, lr}
 1922              	.LCFI15:
 1923              		.cfi_def_cfa_offset 8
 1924              		.cfi_offset 3, -8
 1925              		.cfi_offset 14, -4
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos
 1926              		.loc 1 1071 3 view .LVU564
 1927              		.loc 1 1071 11 is_stmt 0 view .LVU565
 1928 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1929              	.LVL125:
 1930              		.loc 1 1071 54 view .LVU566
 1931 0006 044B     		ldr	r3, .L187
 1932 0008 9B68     		ldr	r3, [r3, #8]
 1933              		.loc 1 1071 79 view .LVU567
 1934 000a C3F38223 		ubfx	r3, r3, #10, #3
 1935              		.loc 1 1071 49 view .LVU568
 1936 000e 034A     		ldr	r2, .L187+4
 1937 0010 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1938              		.loc 1 1072 1 view .LVU569
 1939 0012 D840     		lsrs	r0, r0, r3
 1940 0014 08BD     		pop	{r3, pc}
 1941              	.L188:
 1942 0016 00BF     		.align	2
 1943              	.L187:
 1944 0018 00380240 		.word	1073887232
 1945 001c 00000000 		.word	APBPrescTable
 1946              		.cfi_endproc
 1947              	.LFE149:
 1949              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1950              		.align	1
 1951              		.global	HAL_RCC_GetPCLK2Freq
 1952              		.syntax unified
 1953              		.thumb
 1954              		.thumb_func
 1955              		.fpu fpv5-d16
 1957              	HAL_RCC_GetPCLK2Freq:
 1958              	.LFB150:
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 60


1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval PCLK2 frequency
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 1959              		.loc 1 1081 1 is_stmt 1 view -0
 1960              		.cfi_startproc
 1961              		@ args = 0, pretend = 0, frame = 0
 1962              		@ frame_needed = 0, uses_anonymous_args = 0
 1963 0000 08B5     		push	{r3, lr}
 1964              	.LCFI16:
 1965              		.cfi_def_cfa_offset 8
 1966              		.cfi_offset 3, -8
 1967              		.cfi_offset 14, -4
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos
 1968              		.loc 1 1083 3 view .LVU571
 1969              		.loc 1 1083 11 is_stmt 0 view .LVU572
 1970 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1971              	.LVL126:
 1972              		.loc 1 1083 54 view .LVU573
 1973 0006 044B     		ldr	r3, .L191
 1974 0008 9B68     		ldr	r3, [r3, #8]
 1975              		.loc 1 1083 79 view .LVU574
 1976 000a C3F34233 		ubfx	r3, r3, #13, #3
 1977              		.loc 1 1083 49 view .LVU575
 1978 000e 034A     		ldr	r2, .L191+4
 1979 0010 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 1980              		.loc 1 1084 1 view .LVU576
 1981 0012 D840     		lsrs	r0, r0, r3
 1982 0014 08BD     		pop	{r3, pc}
 1983              	.L192:
 1984 0016 00BF     		.align	2
 1985              	.L191:
 1986 0018 00380240 		.word	1073887232
 1987 001c 00000000 		.word	APBPrescTable
 1988              		.cfi_endproc
 1989              	.LFE150:
 1991              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1992              		.align	1
 1993              		.global	HAL_RCC_GetOscConfig
 1994              		.syntax unified
 1995              		.thumb
 1996              		.thumb_func
 1997              		.fpu fpv5-d16
 1999              	HAL_RCC_GetOscConfig:
 2000              	.LVL127:
 2001              	.LFB151:
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * RCC configuration registers.
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 61


1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * will be configured.
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 2002              		.loc 1 1094 1 is_stmt 1 view -0
 2003              		.cfi_startproc
 2004              		@ args = 0, pretend = 0, frame = 0
 2005              		@ frame_needed = 0, uses_anonymous_args = 0
 2006              		@ link register save eliminated.
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 2007              		.loc 1 1096 3 view .LVU578
 2008              		.loc 1 1096 37 is_stmt 0 view .LVU579
 2009 0000 0F23     		movs	r3, #15
 2010 0002 0360     		str	r3, [r0]
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2011              		.loc 1 1099 3 is_stmt 1 view .LVU580
 2012              		.loc 1 1099 11 is_stmt 0 view .LVU581
 2013 0004 354B     		ldr	r3, .L206
 2014 0006 1B68     		ldr	r3, [r3]
 2015              		.loc 1 1099 6 view .LVU582
 2016 0008 13F4802F 		tst	r3, #262144
 2017 000c 46D0     		beq	.L194
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2018              		.loc 1 1101 5 is_stmt 1 view .LVU583
 2019              		.loc 1 1101 33 is_stmt 0 view .LVU584
 2020 000e 4FF4A023 		mov	r3, #327680
 2021 0012 4360     		str	r3, [r0, #4]
 2022              	.L195:
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else if ((RCC->CR & RCC_CR_HSEON) == RCC_CR_HSEON)
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_HSION) == RCC_CR_HSION)
 2023              		.loc 1 1113 3 is_stmt 1 view .LVU585
 2024              		.loc 1 1113 11 is_stmt 0 view .LVU586
 2025 0014 314B     		ldr	r3, .L206
 2026 0016 1B68     		ldr	r3, [r3]
 2027              		.loc 1 1113 6 view .LVU587
 2028 0018 13F0010F 		tst	r3, #1
 2029 001c 4AD0     		beq	.L197
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2030              		.loc 1 1115 5 is_stmt 1 view .LVU588
 2031              		.loc 1 1115 33 is_stmt 0 view .LVU589
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 62


 2032 001e 0123     		movs	r3, #1
 2033 0020 C360     		str	r3, [r0, #12]
 2034              	.L198:
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_
 2035              		.loc 1 1122 3 is_stmt 1 view .LVU590
 2036              		.loc 1 1122 59 is_stmt 0 view .LVU591
 2037 0022 2E4A     		ldr	r2, .L206
 2038 0024 1368     		ldr	r3, [r2]
 2039              		.loc 1 1122 44 view .LVU592
 2040 0026 C3F3C403 		ubfx	r3, r3, #3, #5
 2041              		.loc 1 1122 42 view .LVU593
 2042 002a 0361     		str	r3, [r0, #16]
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if ((RCC->BDCR & RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2043              		.loc 1 1125 3 is_stmt 1 view .LVU594
 2044              		.loc 1 1125 11 is_stmt 0 view .LVU595
 2045 002c 136F     		ldr	r3, [r2, #112]
 2046              		.loc 1 1125 6 view .LVU596
 2047 002e 13F0040F 		tst	r3, #4
 2048 0032 42D0     		beq	.L199
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2049              		.loc 1 1127 5 is_stmt 1 view .LVU597
 2050              		.loc 1 1127 33 is_stmt 0 view .LVU598
 2051 0034 0523     		movs	r3, #5
 2052 0036 8360     		str	r3, [r0, #8]
 2053              	.L200:
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else if ((RCC->BDCR & RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if ((RCC->CSR & RCC_CSR_LSION) == RCC_CSR_LSION)
 2054              		.loc 1 1139 3 is_stmt 1 view .LVU599
 2055              		.loc 1 1139 11 is_stmt 0 view .LVU600
 2056 0038 284B     		ldr	r3, .L206
 2057 003a 5B6F     		ldr	r3, [r3, #116]
 2058              		.loc 1 1139 6 view .LVU601
 2059 003c 13F0010F 		tst	r3, #1
 2060 0040 46D0     		beq	.L202
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2061              		.loc 1 1141 5 is_stmt 1 view .LVU602
 2062              		.loc 1 1141 33 is_stmt 0 view .LVU603
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 63


 2063 0042 0123     		movs	r3, #1
 2064 0044 4361     		str	r3, [r0, #20]
 2065              	.L203:
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_PLLON) == RCC_CR_PLLON)
 2066              		.loc 1 1149 3 is_stmt 1 view .LVU604
 2067              		.loc 1 1149 11 is_stmt 0 view .LVU605
 2068 0046 254B     		ldr	r3, .L206
 2069 0048 1B68     		ldr	r3, [r3]
 2070              		.loc 1 1149 6 view .LVU606
 2071 004a 13F0807F 		tst	r3, #16777216
 2072 004e 42D0     		beq	.L204
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2073              		.loc 1 1151 5 is_stmt 1 view .LVU607
 2074              		.loc 1 1151 37 is_stmt 0 view .LVU608
 2075 0050 0223     		movs	r3, #2
 2076 0052 8361     		str	r3, [r0, #24]
 2077              	.L205:
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   else
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 2078              		.loc 1 1157 3 is_stmt 1 view .LVU609
 2079              		.loc 1 1157 52 is_stmt 0 view .LVU610
 2080 0054 214A     		ldr	r2, .L206
 2081 0056 5368     		ldr	r3, [r2, #4]
 2082              		.loc 1 1157 38 view .LVU611
 2083 0058 03F48003 		and	r3, r3, #4194304
 2084              		.loc 1 1157 36 view .LVU612
 2085 005c C361     		str	r3, [r0, #28]
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
 2086              		.loc 1 1158 3 is_stmt 1 view .LVU613
 2087              		.loc 1 1158 47 is_stmt 0 view .LVU614
 2088 005e 5368     		ldr	r3, [r2, #4]
 2089              		.loc 1 1158 33 view .LVU615
 2090 0060 03F03F03 		and	r3, r3, #63
 2091              		.loc 1 1158 31 view .LVU616
 2092 0064 0362     		str	r3, [r0, #32]
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Po
 2093              		.loc 1 1159 3 is_stmt 1 view .LVU617
 2094              		.loc 1 1159 48 is_stmt 0 view .LVU618
 2095 0066 5368     		ldr	r3, [r2, #4]
 2096              		.loc 1 1159 33 view .LVU619
 2097 0068 C3F38813 		ubfx	r3, r3, #6, #9
 2098              		.loc 1 1159 31 view .LVU620
 2099 006c 4362     		str	r3, [r0, #36]
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) + RCC_PLLCFGR_PLLP_0
 2100              		.loc 1 1160 3 is_stmt 1 view .LVU621
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 64


 2101              		.loc 1 1160 50 is_stmt 0 view .LVU622
 2102 006e 5368     		ldr	r3, [r2, #4]
 2103              		.loc 1 1160 60 view .LVU623
 2104 0070 03F44033 		and	r3, r3, #196608
 2105              		.loc 1 1160 80 view .LVU624
 2106 0074 03F58033 		add	r3, r3, #65536
 2107              		.loc 1 1160 33 view .LVU625
 2108 0078 DB0B     		lsrs	r3, r3, #15
 2109              		.loc 1 1160 31 view .LVU626
 2110 007a 8362     		str	r3, [r0, #40]
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Po
 2111              		.loc 1 1161 3 is_stmt 1 view .LVU627
 2112              		.loc 1 1161 48 is_stmt 0 view .LVU628
 2113 007c 5368     		ldr	r3, [r2, #4]
 2114              		.loc 1 1161 33 view .LVU629
 2115 007e C3F30363 		ubfx	r3, r3, #24, #4
 2116              		.loc 1 1161 31 view .LVU630
 2117 0082 C362     		str	r3, [r0, #44]
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #if defined (RCC_PLLCFGR_PLLR)
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> POSITION_VAL(RCC_PL
 2118              		.loc 1 1163 3 is_stmt 1 view .LVU631
 2119              		.loc 1 1163 48 is_stmt 0 view .LVU632
 2120 0084 5368     		ldr	r3, [r2, #4]
 2121              		.loc 1 1163 58 view .LVU633
 2122 0086 03F0E043 		and	r3, r3, #1879048192
 2123              	.LVL128:
 2124              	.LBB7:
 2125              	.LBI7:
 2126              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 65


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 66


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 67


 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 68


 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 69


 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 70


 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 71


 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 72


 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 73


 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 74


 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 75


 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 76


 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 77


 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 78


 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 79


 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 80


 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 81


 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 2127              		.loc 2 981 31 is_stmt 1 view .LVU634
 2128              	.LBB8:
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 2129              		.loc 2 983 3 view .LVU635
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2130              		.loc 2 988 4 view .LVU636
 2131 008a 4FF0E042 		mov	r2, #1879048192
 2132              		.syntax unified
 2133              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2134 008e 92FAA2F2 		rbit r2, r2
 2135              	@ 0 "" 2
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 82


 2136              	.LVL129:
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 2137              		.loc 2 1001 3 view .LVU637
 2138              		.loc 2 1001 3 is_stmt 0 view .LVU638
 2139              		.thumb
 2140              		.syntax unified
 2141              	.LBE8:
 2142              	.LBE7:
 2143              		.loc 1 1163 33 view .LVU639
 2144 0092 B2FA82F2 		clz	r2, r2
 2145 0096 D340     		lsrs	r3, r3, r2
 2146              		.loc 1 1163 31 view .LVU640
 2147 0098 0363     		str	r3, [r0, #48]
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** #endif
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 2148              		.loc 1 1165 1 view .LVU641
 2149 009a 7047     		bx	lr
 2150              	.L194:
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 2151              		.loc 1 1103 8 is_stmt 1 view .LVU642
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 2152              		.loc 1 1103 16 is_stmt 0 view .LVU643
 2153 009c 0F4B     		ldr	r3, .L206
 2154 009e 1B68     		ldr	r3, [r3]
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 2155              		.loc 1 1103 11 view .LVU644
 2156 00a0 13F4803F 		tst	r3, #65536
 2157 00a4 03D0     		beq	.L196
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 2158              		.loc 1 1105 5 is_stmt 1 view .LVU645
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 2159              		.loc 1 1105 33 is_stmt 0 view .LVU646
 2160 00a6 4FF48033 		mov	r3, #65536
 2161 00aa 4360     		str	r3, [r0, #4]
 2162 00ac B2E7     		b	.L195
 2163              	.L196:
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 2164              		.loc 1 1109 5 is_stmt 1 view .LVU647
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 2165              		.loc 1 1109 33 is_stmt 0 view .LVU648
 2166 00ae 0023     		movs	r3, #0
 2167 00b0 4360     		str	r3, [r0, #4]
 2168 00b2 AFE7     		b	.L195
 2169              	.L197:
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 83


 2170              		.loc 1 1119 5 is_stmt 1 view .LVU649
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 2171              		.loc 1 1119 33 is_stmt 0 view .LVU650
 2172 00b4 0023     		movs	r3, #0
 2173 00b6 C360     		str	r3, [r0, #12]
 2174 00b8 B3E7     		b	.L198
 2175              	.L199:
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 2176              		.loc 1 1129 8 is_stmt 1 view .LVU651
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 2177              		.loc 1 1129 16 is_stmt 0 view .LVU652
 2178 00ba 084B     		ldr	r3, .L206
 2179 00bc 1B6F     		ldr	r3, [r3, #112]
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 2180              		.loc 1 1129 11 view .LVU653
 2181 00be 13F0010F 		tst	r3, #1
 2182 00c2 02D0     		beq	.L201
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 2183              		.loc 1 1131 5 is_stmt 1 view .LVU654
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 2184              		.loc 1 1131 33 is_stmt 0 view .LVU655
 2185 00c4 0123     		movs	r3, #1
 2186 00c6 8360     		str	r3, [r0, #8]
 2187 00c8 B6E7     		b	.L200
 2188              	.L201:
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 2189              		.loc 1 1135 5 is_stmt 1 view .LVU656
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 2190              		.loc 1 1135 33 is_stmt 0 view .LVU657
 2191 00ca 0023     		movs	r3, #0
 2192 00cc 8360     		str	r3, [r0, #8]
 2193 00ce B3E7     		b	.L200
 2194              	.L202:
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 2195              		.loc 1 1145 5 is_stmt 1 view .LVU658
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 2196              		.loc 1 1145 33 is_stmt 0 view .LVU659
 2197 00d0 0023     		movs	r3, #0
 2198 00d2 4361     		str	r3, [r0, #20]
 2199 00d4 B7E7     		b	.L203
 2200              	.L204:
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 2201              		.loc 1 1155 5 is_stmt 1 view .LVU660
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 2202              		.loc 1 1155 37 is_stmt 0 view .LVU661
 2203 00d6 0123     		movs	r3, #1
 2204 00d8 8361     		str	r3, [r0, #24]
 2205 00da BBE7     		b	.L205
 2206              	.L207:
 2207              		.align	2
 2208              	.L206:
 2209 00dc 00380240 		.word	1073887232
 2210              		.cfi_endproc
 2211              	.LFE151:
 2213              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2214              		.align	1
 2215              		.global	HAL_RCC_GetClockConfig
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 84


 2216              		.syntax unified
 2217              		.thumb
 2218              		.thumb_func
 2219              		.fpu fpv5-d16
 2221              	HAL_RCC_GetClockConfig:
 2222              	.LVL130:
 2223              	.LFB152:
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * RCC configuration registers.
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * will be configured.
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 2224              		.loc 1 1176 1 is_stmt 1 view -0
 2225              		.cfi_startproc
 2226              		@ args = 0, pretend = 0, frame = 0
 2227              		@ frame_needed = 0, uses_anonymous_args = 0
 2228              		@ link register save eliminated.
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2229              		.loc 1 1178 3 view .LVU663
 2230              		.loc 1 1178 32 is_stmt 0 view .LVU664
 2231 0000 0F23     		movs	r3, #15
 2232 0002 0360     		str	r3, [r0]
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2233              		.loc 1 1181 3 is_stmt 1 view .LVU665
 2234              		.loc 1 1181 51 is_stmt 0 view .LVU666
 2235 0004 0B4B     		ldr	r3, .L209
 2236 0006 9A68     		ldr	r2, [r3, #8]
 2237              		.loc 1 1181 37 view .LVU667
 2238 0008 02F00302 		and	r2, r2, #3
 2239              		.loc 1 1181 35 view .LVU668
 2240 000c 4260     		str	r2, [r0, #4]
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 2241              		.loc 1 1184 3 is_stmt 1 view .LVU669
 2242              		.loc 1 1184 52 is_stmt 0 view .LVU670
 2243 000e 9A68     		ldr	r2, [r3, #8]
 2244              		.loc 1 1184 38 view .LVU671
 2245 0010 02F0F002 		and	r2, r2, #240
 2246              		.loc 1 1184 36 view .LVU672
 2247 0014 8260     		str	r2, [r0, #8]
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 2248              		.loc 1 1187 3 is_stmt 1 view .LVU673
 2249              		.loc 1 1187 53 is_stmt 0 view .LVU674
 2250 0016 9A68     		ldr	r2, [r3, #8]
 2251              		.loc 1 1187 39 view .LVU675
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 85


 2252 0018 02F4E052 		and	r2, r2, #7168
 2253              		.loc 1 1187 37 view .LVU676
 2254 001c C260     		str	r2, [r0, #12]
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
 2255              		.loc 1 1190 3 is_stmt 1 view .LVU677
 2256              		.loc 1 1190 54 is_stmt 0 view .LVU678
 2257 001e 9B68     		ldr	r3, [r3, #8]
 2258              		.loc 1 1190 39 view .LVU679
 2259 0020 DB08     		lsrs	r3, r3, #3
 2260 0022 03F4E053 		and	r3, r3, #7168
 2261              		.loc 1 1190 37 view .LVU680
 2262 0026 0361     		str	r3, [r0, #16]
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 2263              		.loc 1 1193 3 is_stmt 1 view .LVU681
 2264              		.loc 1 1193 32 is_stmt 0 view .LVU682
 2265 0028 034B     		ldr	r3, .L209+4
 2266 002a 1B68     		ldr	r3, [r3]
 2267              		.loc 1 1193 16 view .LVU683
 2268 002c 03F00F03 		and	r3, r3, #15
 2269              		.loc 1 1193 14 view .LVU684
 2270 0030 0B60     		str	r3, [r1]
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 2271              		.loc 1 1194 1 view .LVU685
 2272 0032 7047     		bx	lr
 2273              	.L210:
 2274              		.align	2
 2275              	.L209:
 2276 0034 00380240 		.word	1073887232
 2277 0038 003C0240 		.word	1073888256
 2278              		.cfi_endproc
 2279              	.LFE152:
 2281              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2282              		.align	1
 2283              		.weak	HAL_RCC_CSSCallback
 2284              		.syntax unified
 2285              		.thumb
 2286              		.thumb_func
 2287              		.fpu fpv5-d16
 2289              	HAL_RCC_CSSCallback:
 2290              	.LFB154:
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   if (__HAL_RCC_GET_IT(RCC_IT_CSS))
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 86


1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** /**
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   * @retval None
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   */
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** {
 2291              		.loc 1 1219 1 is_stmt 1 view -0
 2292              		.cfi_startproc
 2293              		@ args = 0, pretend = 0, frame = 0
 2294              		@ frame_needed = 0, uses_anonymous_args = 0
 2295              		@ link register save eliminated.
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****             the HAL_RCC_CSSCallback could be implemented in the user file
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****    */
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** }
 2296              		.loc 1 1223 1 view .LVU687
 2297 0000 7047     		bx	lr
 2298              		.cfi_endproc
 2299              	.LFE154:
 2301              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2302              		.align	1
 2303              		.global	HAL_RCC_NMI_IRQHandler
 2304              		.syntax unified
 2305              		.thumb
 2306              		.thumb_func
 2307              		.fpu fpv5-d16
 2309              	HAL_RCC_NMI_IRQHandler:
 2310              	.LFB153:
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2311              		.loc 1 1202 1 view -0
 2312              		.cfi_startproc
 2313              		@ args = 0, pretend = 0, frame = 0
 2314              		@ frame_needed = 0, uses_anonymous_args = 0
 2315 0000 08B5     		push	{r3, lr}
 2316              	.LCFI17:
 2317              		.cfi_def_cfa_offset 8
 2318              		.cfi_offset 3, -8
 2319              		.cfi_offset 14, -4
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 2320              		.loc 1 1204 3 view .LVU689
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 2321              		.loc 1 1204 7 is_stmt 0 view .LVU690
 2322 0002 064B     		ldr	r3, .L216
 2323 0004 DB68     		ldr	r3, [r3, #12]
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   {
 2324              		.loc 1 1204 6 view .LVU691
 2325 0006 13F0800F 		tst	r3, #128
 2326 000a 00D1     		bne	.L215
 2327              	.L212:
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 2328              		.loc 1 1212 1 view .LVU692
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 87


 2329 000c 08BD     		pop	{r3, pc}
 2330              	.L215:
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 2331              		.loc 1 1207 5 is_stmt 1 view .LVU693
 2332 000e FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2333              	.LVL131:
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c ****   }
 2334              		.loc 1 1210 5 view .LVU694
 2335 0012 034B     		ldr	r3, .L216+4
 2336 0014 8022     		movs	r2, #128
 2337 0016 1A70     		strb	r2, [r3]
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c **** 
 2338              		.loc 1 1212 1 is_stmt 0 view .LVU695
 2339 0018 F8E7     		b	.L212
 2340              	.L217:
 2341 001a 00BF     		.align	2
 2342              	.L216:
 2343 001c 00380240 		.word	1073887232
 2344 0020 0E380240 		.word	1073887246
 2345              		.cfi_endproc
 2346              	.LFE153:
 2348              		.text
 2349              	.Letext0:
 2350              		.file 3 "c:\\users\\hungv\\appdata\\roaming\\xpacks\\@gnu-mcu-eclipse\\arm-none-eabi-gcc\\8.2.1-1.
 2351              		.file 4 "c:\\users\\hungv\\appdata\\roaming\\xpacks\\@gnu-mcu-eclipse\\arm-none-eabi-gcc\\8.2.1-1.
 2352              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 2353              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 2354              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 2355              		.file 8 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 2356              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2357              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 2358              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 2359              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 2360              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s 			page 88


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_rcc.c
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:17     .text.HAL_RCC_DeInit:0000000000000000 $t
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:25     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:295    .text.HAL_RCC_DeInit:0000000000000148 $d
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:304    .text.HAL_RCC_OscConfig:0000000000000000 $t
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:311    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:863    .text.HAL_RCC_OscConfig:00000000000002b4 $d
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:867    .text.HAL_RCC_OscConfig:00000000000002bc $t
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1197   .text.HAL_RCC_OscConfig:0000000000000440 $d
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1202   .text.HAL_RCC_MCOConfig:0000000000000000 $t
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1209   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1356   .text.HAL_RCC_MCOConfig:000000000000008c $d
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1363   .text.HAL_RCC_EnableCSS:0000000000000000 $t
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1370   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1387   .text.HAL_RCC_EnableCSS:000000000000000c $d
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1392   .text.HAL_RCC_DisableCSS:0000000000000000 $t
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1399   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1416   .text.HAL_RCC_DisableCSS:000000000000000c $d
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1422   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1429   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1566   .text.HAL_RCC_GetSysClockFreq:00000000000000c0 $d
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1572   .text.HAL_RCC_ClockConfig:0000000000000000 $t
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1579   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1872   .text.HAL_RCC_ClockConfig:0000000000000158 $d
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1881   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1888   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1903   .text.HAL_RCC_GetHCLKFreq:0000000000000008 $d
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1908   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1915   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1944   .text.HAL_RCC_GetPCLK1Freq:0000000000000018 $d
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1950   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1957   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1986   .text.HAL_RCC_GetPCLK2Freq:0000000000000018 $d
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1992   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:1999   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:2209   .text.HAL_RCC_GetOscConfig:00000000000000dc $d
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:2214   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:2221   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:2276   .text.HAL_RCC_GetClockConfig:0000000000000034 $d
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:2282   .text.HAL_RCC_CSSCallback:0000000000000000 $t
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:2289   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:2302   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:2309   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
C:\Users\hungv\AppData\Local\Temp\cc8M2uOM.s:2343   .text.HAL_RCC_NMI_IRQHandler:000000000000001c $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
uwTickPrio
HAL_GPIO_Init
__aeabi_uldivmod
AHBPrescTable
APBPrescTable
